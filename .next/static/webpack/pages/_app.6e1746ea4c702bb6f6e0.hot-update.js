webpackHotUpdate_N_E("pages/_app",{

/***/ "./src/utils/mapData.js":
/*!******************************!*\
  !*** ./src/utils/mapData.js ***!
  \******************************/
/*! exports provided: mapData */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mapData\", function() { return mapData; });\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! dayjs */ \"./node_modules/dayjs/dayjs.min.js\");\n/* harmony import */ var dayjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(dayjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _iconsMap__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iconsMap */ \"./src/utils/iconsMap.js\");\n\n\n\nvar formatDate = function formatDate(dte, lang) {\n  if (lang && lang !== \"en\") {\n    dayjs__WEBPACK_IMPORTED_MODULE_0___default.a.locale(lang.replace(\"_\", \"-\"));\n  }\n\n  if (dte && dayjs__WEBPACK_IMPORTED_MODULE_0___default()().isValid(dte)) {\n    return dayjs__WEBPACK_IMPORTED_MODULE_0___default.a.unix(dte).format(\"ddd D MMMM YYYY\");\n  }\n\n  return \"\";\n};\n\nvar mapCurrent = function mapCurrent(day, geoData, lang) {\n  return {\n    city: geoData.name,\n    state: geoData.state,\n    country: geoData.country,\n    date: formatDate(day.dt, lang),\n    description: day.weather[0] ? day.weather[0].description : null,\n    icon: day.weather[0] && Object(_iconsMap__WEBPACK_IMPORTED_MODULE_1__[\"getIcon\"])(day.weather[0].icon),\n    temperature: {\n      current: day.temp.toFixed(0),\n      min: undefined,\n      // openweather doesnt provide min/max on current weather\n      max: undefined\n    },\n    wind: day.wind_speed,\n    humidity: day.humidity,\n    pressure: day.pressure\n  };\n};\n\nvar mapForecast = function mapForecast(forecast, lang) {\n  var mappedForecast = [];\n\n  for (var i = 0; i < 8; i += 1) {\n    mappedForecast.push({\n      date: formatDate(forecast[i].dt, lang),\n      description: forecast[i].weather[0] ? forecast[i].weather[0].description : null,\n      icon: forecast[i].weather[0] && Object(_iconsMap__WEBPACK_IMPORTED_MODULE_1__[\"getIcon\"])(forecast[i].weather[0].icon),\n      temperature: {\n        min: forecast[i].temp.min.toFixed(0),\n        max: forecast[i].temp.max.toFixed(0)\n      },\n      wind: forecast[i].wind_speed.toFixed(0),\n      humidity: forecast[i].humidity,\n      pressure: forecast[i].pressure\n    });\n  }\n\n  return mappedForecast;\n};\n\nvar mapData = function mapData(forecastData, todayData, geoData, lang) {\n  var mapped = {};\n\n  if (forecastData && todayData) {\n    var daysData = forecastData;\n    mapped.current = mapCurrent(todayData, geoData, lang);\n    mapped.forecast = mapForecast(daysData);\n  }\n\n  return mapped;\n};\n\n\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.i);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/next/dist/compiled/webpack/harmony-module.js */ \"./node_modules/next/dist/compiled/webpack/harmony-module.js\")(module)))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL3V0aWxzL21hcERhdGEuanM/MjM0ZiJdLCJuYW1lcyI6WyJmb3JtYXREYXRlIiwiZHRlIiwibGFuZyIsImRheWpzIiwibG9jYWxlIiwicmVwbGFjZSIsImlzVmFsaWQiLCJ1bml4IiwiZm9ybWF0IiwibWFwQ3VycmVudCIsImRheSIsImdlb0RhdGEiLCJjaXR5IiwibmFtZSIsInN0YXRlIiwiY291bnRyeSIsImRhdGUiLCJkdCIsImRlc2NyaXB0aW9uIiwid2VhdGhlciIsImljb24iLCJnZXRJY29uIiwidGVtcGVyYXR1cmUiLCJjdXJyZW50IiwidGVtcCIsInRvRml4ZWQiLCJtaW4iLCJ1bmRlZmluZWQiLCJtYXgiLCJ3aW5kIiwid2luZF9zcGVlZCIsImh1bWlkaXR5IiwicHJlc3N1cmUiLCJtYXBGb3JlY2FzdCIsImZvcmVjYXN0IiwibWFwcGVkRm9yZWNhc3QiLCJpIiwicHVzaCIsIm1hcERhdGEiLCJmb3JlY2FzdERhdGEiLCJ0b2RheURhdGEiLCJtYXBwZWQiLCJkYXlzRGF0YSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQ0E7O0FBRUEsSUFBTUEsVUFBVSxHQUFHLFNBQWJBLFVBQWEsQ0FBQ0MsR0FBRCxFQUFNQyxJQUFOLEVBQWU7QUFDaEMsTUFBSUEsSUFBSSxJQUFJQSxJQUFJLEtBQUssSUFBckIsRUFBMkI7QUFDekJDLGdEQUFLLENBQUNDLE1BQU4sQ0FBYUYsSUFBSSxDQUFDRyxPQUFMLENBQWEsR0FBYixFQUFrQixHQUFsQixDQUFiO0FBQ0Q7O0FBQ0QsTUFBSUosR0FBRyxJQUFJRSw0Q0FBSyxHQUFHRyxPQUFSLENBQWdCTCxHQUFoQixDQUFYLEVBQWlDO0FBQy9CLFdBQU9FLDRDQUFLLENBQUNJLElBQU4sQ0FBV04sR0FBWCxFQUFnQk8sTUFBaEIsQ0FBdUIsaUJBQXZCLENBQVA7QUFDRDs7QUFDRCxTQUFPLEVBQVA7QUFDRCxDQVJEOztBQVVBLElBQU1DLFVB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RyxFQUFmOztBQUNBLE1BQUlGLFlBQVksSUFBSUMsU0FBcEIsRUFBK0I7QUFDN0IsUUFBTUUsUUFBUSxHQUFHSCxZQUFqQjtBQUNBRSxVQUFNLENBQUNsQixPQUFQLEdBQWlCZCxVQUFVLENBQUMrQixTQUFELEVBQVk3QixPQUFaLEVBQXFCVCxJQUFyQixDQUEzQjtBQUNBdUMsVUFBTSxDQUFDUCxRQUFQLEdBQWtCRCxXQUFXLENBQUNTLFFBQUQsQ0FBN0I7QUFDRDs7QUFDRCxTQUFPRCxNQUFQO0FBQ0QsQ0FSRDs7QUFVQSIsImZpbGUiOiIuL3NyYy91dGlscy9tYXBEYXRhLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGRheWpzIGZyb20gXCJkYXlqc1wiO1xuaW1wb3J0IHsgZ2V0SWNvbiB9IGZyb20gXCIuL2ljb25zTWFwXCI7XG5cbmNvbnN0IGZvcm1hdERhdGUgPSAoZHRlLCBsYW5nKSA9PiB7XG4gIGlmIChsYW5nICYmIGxhbmcgIT09IFwiZW5cIikge1xuICAgIGRheWpzLmxvY2FsZShsYW5nLnJlcGxhY2UoXCJfXCIsIFwiLVwiKSk7XG4gIH1cbiAgaWYgKGR0ZSAmJiBkYXlqcygpLmlzVmFsaWQoZHRlKSkge1xuICAgIHJldHVybiBkYXlqcy51bml4KGR0ZSkuZm9ybWF0KFwiZGRkIEQgTU1NTSBZWVlZXCIpO1xuICB9XG4gIHJldHVybiBcIlwiO1xufTtcblxuY29uc3QgbWFwQ3VycmVudCA9IChkYXksIGdlb0RhdGEsIGxhbmcpID0+IHtcbiAgcmV0dXJuIHtcbiAgICBjaXR5OiBnZW9EYXRhLm5hbWUsXG4gICAgc3RhdGU6IGdlb0RhdGEuc3RhdGUsXG4gICAgY291bnRyeTogZ2VvRGF0YS5jb3VudHJ5LFxuICAgIGRhdGU6IGZvcm1hdERhdGUoZGF5LmR0LCBsYW5nKSxcbiAgICBkZXNjcmlwdGlvbjogZGF5LndlYXRoZXJbMF0gPyBkYXkud2VhdGhlclswXS5kZXNjcmlwdGlvbiA6IG51bGwsXG4gICAgaWNvbjogZGF5LndlYXRoZXJbMF0gJiYgZ2V0SWNvbihkYXkud2VhdGhlclswXS5pY29uKSxcbiAgICB0ZW1wZXJhdHVyZToge1xuICAgICAgY3VycmVudDogZGF5LnRlbXAudG9GaXhlZCgwKSxcbiAgICAgIG1pbjogdW5kZWZpbmVkLCAvLyBvcGVud2VhdGhlciBkb2VzbnQgcHJvdmlkZSBtaW4vbWF4IG9uIGN1cnJlbnQgd2VhdGhlclxuICAgICAgbWF4OiB1bmRlZmluZWQsXG4gICAgfSxcbiAgICB3aW5kOiBkYXkud2luZF9zcGVlZCxcbiAgICBodW1pZGl0eTogZGF5Lmh1bWlkaXR5LFxuICAgIHByZXNzdXJlOiBkYXkucHJlc3N1cmUsXG4gIH07XG59O1xuXG5jb25zdCBtYXBGb3JlY2FzdCA9IChmb3JlY2FzdCwgbGFuZykgPT4ge1xuICBjb25zdCBtYXBwZWRGb3JlY2FzdCA9IFtdO1xuICBmb3IgKGxldCBpID0gMDsgaSA8IDg7IGkgKz0gMSkge1xuICAgIG1hcHBlZEZvcmVjYXN0LnB1c2goe1xuICAgICAgZGF0ZTogZm9ybWF0RGF0ZShmb3JlY2FzdFtpXS5kdCwgbGFuZyksXG4gICAgICBkZXNjcmlwdGlvbjogZm9yZWNhc3RbaV0ud2VhdGhlclswXVxuICAgICAgICA/IGZvcmVjYXN0W2ldLndlYXRoZXJbMF0uZGVzY3JpcHRpb25cbiAgICAgICAgOiBudWxsLFxuICAgICAgaWNvbjogZm9yZWNhc3RbaV0ud2VhdGhlclswXSAmJiBnZXRJY29uKGZvcmVjYXN0W2ldLndlYXRoZXJbMF0uaWNvbiksXG4gICAgICB0ZW1wZXJhdHVyZToge1xuICAgICAgICBtaW46IGZvcmVjYXN0W2ldLnRlbXAubWluLnRvRml4ZWQoMCksXG4gICAgICAgIG1heDogZm9yZWNhc3RbaV0udGVtcC5tYXgudG9GaXhlZCgwKSxcbiAgICAgIH0sXG4gICAgICB3aW5kOiBmb3JlY2FzdFtpXS53aW5kX3NwZWVkLnRvRml4ZWQoMCksXG4gICAgICBodW1pZGl0eTogZm9yZWNhc3RbaV0uaHVtaWRpdHksXG4gICAgICBwcmVzc3VyZTogZm9yZWNhc3RbaV0ucHJlc3N1cmUsXG4gICAgfSk7XG4gIH1cbiAgcmV0dXJuIG1hcHBlZEZvcmVjYXN0O1xufTtcblxuY29uc3QgbWFwRGF0YSA9IChmb3JlY2FzdERhdGEsIHRvZGF5RGF0YSwgZ2VvRGF0YSwgbGFuZykgPT4ge1xuICBjb25zdCBtYXBwZWQgPSB7fTtcbiAgaWYgKGZvcmVjYXN0RGF0YSAmJiB0b2RheURhdGEpIHtcbiAgICBjb25zdCBkYXlzRGF0YSA9IGZvcmVjYXN0RGF0YTtcbiAgICBtYXBwZWQuY3VycmVudCA9IG1hcEN1cnJlbnQodG9kYXlEYXRhLCBnZW9EYXRhLCBsYW5nKTtcbiAgICBtYXBwZWQuZm9yZWNhc3QgPSBtYXBGb3JlY2FzdChkYXlzRGF0YSk7XG4gIH1cbiAgcmV0dXJuIG1hcHBlZDtcbn07XG5cbmV4cG9ydCB7IG1hcERhdGEgfTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/utils/mapData.js\n");

/***/ })

})