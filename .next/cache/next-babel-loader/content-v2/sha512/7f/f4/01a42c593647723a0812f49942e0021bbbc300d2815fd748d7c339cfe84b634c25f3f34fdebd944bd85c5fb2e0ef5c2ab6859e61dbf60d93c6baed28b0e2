{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nexport var SET_DATA = \"SET_DATA\";\nexport var FAILURE = \"FAILURE\";\nimport axios from \"axios\";\nimport { mapData } from \"../utils\";\nexport var getData = function getData(options) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var endpoint, unit, lang, key, query, params, weather, forecast, axiosRequest1, axiosRequest2, forecastResponse, payload;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"trest\");\n              endpoint = \"//api.openweathermap.org/data/2.5/onecall\";\n              unit = options.unit, lang = options.lang, key = options.key, query = options.query;\n              params = {\n                appid: key,\n                lang: lang,\n                units: unit,\n                q: query\n              };\n              weather = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&APPID=\").concat(APIkey, \"&units=metric\");\n              forecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(value, \"&APPID=\").concat(APIkey, \"&units=metric\");\n              axiosRequest1 = axios.get(weather, {\n                params: params\n              });\n              axiosRequest2 = axios.get(forecast, {\n                params: params\n              });\n              _context.prev = 8;\n              _context.next = 11;\n              return axios.all([axiosRequest1, axiosRequest2]);\n\n            case 11:\n              forecastResponse = _context.sent;\n              console.log(forecastResponse);\n              payload = mapData(forecastResponse.data[0], forecastResponse.data[1], lang);\n              dispatch({\n                type: SET_DATA,\n                payload: payload\n              });\n              _context.next = 21;\n              break;\n\n            case 17:\n              _context.prev = 17;\n              _context.t0 = _context[\"catch\"](8);\n              console.error(_context.t0.message);\n              dispatch({\n                type: FAILURE,\n                payload: {\n                  error: _context.t0.message || _context.t0\n                }\n              });\n\n            case 21:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[8, 17]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/redux/action.js"],"names":["SET_DATA","FAILURE","axios","mapData","getData","options","dispatch","console","log","endpoint","unit","lang","key","query","params","appid","units","q","weather","value","APIkey","forecast","axiosRequest1","get","axiosRequest2","all","forecastResponse","payload","data","type","error","message"],"mappings":";;AAAA,OAAO,IAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,IAAMC,OAAO,GAAG,SAAhB;AACP,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,OAAD;AAAA;AAAA,wEAAa,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACMC,cAAAA,QAF4B,GAEjB,2CAFiB;AAI1BC,cAAAA,IAJ0B,GAICL,OAJD,CAI1BK,IAJ0B,EAIpBC,IAJoB,GAICN,OAJD,CAIpBM,IAJoB,EAIdC,GAJc,GAICP,OAJD,CAIdO,GAJc,EAITC,KAJS,GAICR,OAJD,CAITQ,KAJS;AAK5BC,cAAAA,MAL4B,GAKnB;AACbC,gBAAAA,KAAK,EAAEH,GADM;AAEbD,gBAAAA,IAAI,EAAJA,IAFa;AAGbK,gBAAAA,KAAK,EAAEN,IAHM;AAIbO,gBAAAA,CAAC,EAAEJ;AAJU,eALmB;AAY5BK,cAAAA,OAZ4B,+DAYmCC,KAZnC,oBAYkDC,MAZlD;AAa5BC,cAAAA,QAb4B,gEAaqCF,KAbrC,oBAaoDC,MAbpD;AAe5BE,cAAAA,aAf4B,GAeZpB,KAAK,CAACqB,GAAN,CAAUL,OAAV,EAAmB;AAAEJ,gBAAAA,MAAM,EAANA;AAAF,eAAnB,CAfY;AAgB5BU,cAAAA,aAhB4B,GAgBZtB,KAAK,CAACqB,GAAN,CAAUF,QAAV,EAAoB;AAAEP,gBAAAA,MAAM,EAANA;AAAF,eAApB,CAhBY;AAAA;AAAA;AAAA,qBAmBDZ,KAAK,CAACuB,GAAN,CAAU,CAACH,aAAD,EAAgBE,aAAhB,CAAV,CAnBC;;AAAA;AAmB1BE,cAAAA,gBAnB0B;AAoBhCnB,cAAAA,OAAO,CAACC,GAAR,CAAYkB,gBAAZ;AACMC,cAAAA,OArB0B,GAqBhBxB,OAAO,CACrBuB,gBAAgB,CAACE,IAAjB,CAAsB,CAAtB,CADqB,EAErBF,gBAAgB,CAACE,IAAjB,CAAsB,CAAtB,CAFqB,EAGrBjB,IAHqB,CArBS;AA2BhCL,cAAAA,QAAQ,CAAC;AACPuB,gBAAAA,IAAI,EAAE7B,QADC;AAEP2B,gBAAAA,OAAO,EAAPA;AAFO,eAAD,CAAR;AA3BgC;AAAA;;AAAA;AAAA;AAAA;AAgChCpB,cAAAA,OAAO,CAACuB,KAAR,CAAc,YAAMC,OAApB;AACAzB,cAAAA,QAAQ,CAAC;AAAEuB,gBAAAA,IAAI,EAAE5B,OAAR;AAAiB0B,gBAAAA,OAAO,EAAE;AAAEG,kBAAAA,KAAK,EAAE,YAAMC,OAAN;AAAT;AAA1B,eAAD,CAAR;;AAjCgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAb;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhB","sourcesContent":["export const SET_DATA = \"SET_DATA\";\nexport const FAILURE = \"FAILURE\";\nimport axios from \"axios\";\nimport { mapData } from \"../utils\";\n\nexport const getData = (options) => async (dispatch) => {\n  console.log(\"trest\");\n  const endpoint = \"//api.openweathermap.org/data/2.5/onecall\";\n\n  const { unit, lang, key, query } = options;\n  const params = {\n    appid: key,\n    lang,\n    units: unit,\n    q: query,\n  };\n\n  const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n  const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n  const axiosRequest1 = axios.get(weather, { params });\n  const axiosRequest2 = axios.get(forecast, { params });\n\n  try {\n    const forecastResponse = await axios.all([axiosRequest1, axiosRequest2]);\n    console.log(forecastResponse);\n    const payload = mapData(\n      forecastResponse.data[0],\n      forecastResponse.data[1],\n      lang\n    );\n\n    dispatch({\n      type: SET_DATA,\n      payload,\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({ type: FAILURE, payload: { error: error.message || error } });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}