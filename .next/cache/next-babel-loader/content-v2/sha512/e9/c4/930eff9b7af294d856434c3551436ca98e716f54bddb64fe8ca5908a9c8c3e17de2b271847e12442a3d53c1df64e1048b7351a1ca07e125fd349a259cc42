{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/pages/task/weather.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 1500px;\\n  margin: 0 auto;\\n  height: calc(100vh - 64px);\\n  width: 100%;\\n  position: relative;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../../redux/action\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchCity from \"../../components/WeatherInt/SearchCity\";\nimport Title from \"../../components/WeatherInt/Title\";\nimport Result from \"../../components/WeatherInt/Result\";\nimport NotFound from \"../../components/WeatherInt/NotFound\";\nvar WeatherWrapper = styled.div(_templateObject());\n_c = WeatherWrapper;\n\nvar WeatherInt = function WeatherInt() {\n  _s();\n\n  var key = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var weatherInfo = useSelector(function (state) {\n    return state.data;\n  });\n  var error = useSelector(function (state) {\n    return state.error;\n  });\n  useEffect(function () {\n    if (true) {\n      if (localStorage.getItem(\"location\")) {\n        setValue(localStorage.getItem(\"location\"));\n        dispatch(getData({\n          key: key,\n          query: localStorage.getItem(\"location\"),\n          lang: \"en\",\n          unit: \"metric\" // values are (metric, standard, imperial)\n\n        }));\n      }\n    }\n  }, []);\n\n  var handleInputChange = function handleInputChange(e) {\n    setValue(e.target.value);\n  };\n\n  var handleSearchCity = function handleSearchCity(e) {\n    e.preventDefault();\n\n    if (true) {\n      localStorage.setItem(\"location\", value);\n    }\n\n    dispatch(getData({\n      key: key,\n      query: value,\n      lang: \"en\",\n      unit: \"metric\" // values are (metric, standard, imperial)\n\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WeatherWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        weatherInfo: weatherInfo,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(SearchCity, {\n        value: value,\n        showResult: (weatherInfo || error) && true,\n        change: handleInputChange,\n        submit: handleSearchCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, _this), weatherInfo && /*#__PURE__*/_jsxDEV(Result, {\n        weather: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }, _this), error && /*#__PURE__*/_jsxDEV(NotFound, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 19\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false);\n};\n\n_s(WeatherInt, \"w7IDRU33I46IXBnIqLqNiAaNMTY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c2 = WeatherInt;\nexport default WeatherInt;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"WeatherWrapper\");\n$RefreshReg$(_c2, \"WeatherInt\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/pages/task/weather.js"],"names":["React","useEffect","useState","getData","Provider","useSelector","useDispatch","styled","SearchCity","Title","Result","NotFound","WeatherWrapper","div","WeatherInt","key","dispatch","value","setValue","weatherInfo","state","data","error","localStorage","getItem","query","lang","unit","handleInputChange","e","target","handleSearchCity","preventDefault","setItem"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getData } from \"../../redux/action\";\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchCity from \"../../components/WeatherInt/SearchCity\";\nimport Title from \"../../components/WeatherInt/Title\";\nimport Result from \"../../components/WeatherInt/Result\";\nimport NotFound from \"../../components/WeatherInt/NotFound\";\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nconst WeatherInt = () => {\n  const key = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const weatherInfo = useSelector((state) => state.data);\n  const error = useSelector((state) => state.error);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"location\")) {\n        setValue(localStorage.getItem(\"location\"));\n        dispatch(\n          getData({\n            key,\n            query: localStorage.getItem(\"location\"),\n            lang: \"en\",\n            unit: \"metric\", // values are (metric, standard, imperial)\n          })\n        );\n      }\n    }\n  }, []);\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSearchCity = (e) => {\n    e.preventDefault();\n\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"location\", value);\n    }\n\n    dispatch(\n      getData({\n        key,\n        query: value,\n        lang: \"en\",\n        unit: \"metric\", // values are (metric, standard, imperial)\n      })\n    );\n  };\n\n  return (\n    <>\n      <WeatherWrapper>\n        <Title weatherInfo={weatherInfo} error={error} />\n        <SearchCity\n          value={value}\n          showResult={(weatherInfo || error) && true}\n          change={handleInputChange}\n          submit={handleSearchCity}\n        />\n        {weatherInfo && <Result weather={weatherInfo} />}\n        {error && <NotFound error={error} />}\n      </WeatherWrapper>\n    </>\n  );\n};\n\nexport default WeatherInt;\n"]},"metadata":{},"sourceType":"module"}