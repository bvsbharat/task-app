{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/ForecastHour.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport SmallLabel from \"./SmallLabel\";\nimport Text from \"./Text\";\nimport device from \"../../responsive/Device\";\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.3);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = props => {\n  const {\n    date,\n    description,\n    icon,\n    temperature\n  } = props;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n  return /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      align: \"center\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      align: \"center\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SmallLabel, {\n      align: \"center\",\n      weight: \"400\",\n      children: [\"Min : \", temperature.min, \"\\xB0 Max: \", temperature.max, \"\\xB0\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\nForecastHour.propTypes = {\n  temp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired\n};\nexport default ForecastHour;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/ForecastHour.js"],"names":["React","styled","PropTypes","SmallLabel","Text","device","ForecastWrapper","div","tablet","laptop","laptopL","WeatherIcon","img","ForecastHour","props","date","description","icon","temperature","iconUrl","min","max","propTypes","temp","number","isRequired","month","string","day","hour"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AAEA,MAAMC,eAAe,GAAGL,MAAM,CAACM,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWF,MAAM,CAACG,MAAO;AACzB;AACA;AACA,WAAWH,MAAM,CAACI,MAAO;AACzB;AACA;AACA,WAAWJ,MAAM,CAACK,OAAQ;AAC1B;AACA;AACA,CAtBA;AAwBA,MAAMC,WAAW,GAAGV,MAAM,CAACW,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,WAAR;AAAqBC,IAAAA,IAArB;AAA2BC,IAAAA;AAA3B,MAA2CJ,KAAjD;AACA,QAAMK,OAAO,GAAI,oCAAmCF,IAAK,MAAzD;AAEA,sBACE,QAAC,eAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,gBAAsBF;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAM,MAAA,KAAK,EAAC,QAAZ;AAAA,gBAAsBC;AAAtB;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,QAAlB;AAA2B,MAAA,MAAM,EAAC,KAAlC;AAAA,2BACSE,WAAW,CAACE,GADrB,gBACsCF,WAAW,CAACG,GADlD;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAdD;;AAgBAR,YAAY,CAACS,SAAb,GAAyB;AACvBC,EAAAA,IAAI,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADA;AAEvBC,EAAAA,KAAK,EAAExB,SAAS,CAACyB,MAAV,CAAiBF,UAFD;AAGvBG,EAAAA,GAAG,EAAE1B,SAAS,CAACyB,MAAV,CAAiBF,UAHC;AAIvBI,EAAAA,IAAI,EAAE3B,SAAS,CAACsB,MAAV,CAAiBC,UAJA;AAKvBR,EAAAA,IAAI,EAAEf,SAAS,CAACyB,MAAV,CAAiBF;AALA,CAAzB;AAQA,eAAeZ,YAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport SmallLabel from \"./SmallLabel\";\nimport Text from \"./Text\";\nimport device from \"../../responsive/Device\";\n\nconst ForecastWrapper = styled.div`\n  flex-shrink: 0;\n  flex-basis: 90px;\n  padding: 10px;\n  margin: 0 5px;\n  border-radius: 5px;\n  background-color: rgba(255, 255, 255, 0.3);\n  &:first-child {\n    margin-left: 0;\n  }\n  &:last-child {\n    margin-right: 0;\n  }\n  @media ${device.tablet} {\n    flex-basis: 110px;\n  }\n  @media ${device.laptop} {\n    flex-basis: 125px;\n  }\n  @media ${device.laptopL} {\n    flex-basis: 140px;\n  }\n`;\n\nconst WeatherIcon = styled.img`\n  display: block;\n  height: 50px;\n  width: 50px;\n  margin: 0 auto;\n`;\n\nconst ForecastHour = (props) => {\n  const { date, description, icon, temperature } = props;\n  const iconUrl = `https://openweathermap.org/img/w/${icon}.png`;\n\n  return (\n    <ForecastWrapper>\n      <Text align=\"center\">{date}</Text>\n      <Text align=\"center\">{description}</Text>\n      {/* <WeatherIcon src={iconUrl} /> */}\n      <SmallLabel align=\"center\" weight=\"400\">\n        Min : {temperature.min}&#176; Max: {temperature.max}&#176;\n      </SmallLabel>\n    </ForecastWrapper>\n  );\n};\n\nForecastHour.propTypes = {\n  temp: PropTypes.number.isRequired,\n  month: PropTypes.string.isRequired,\n  day: PropTypes.string.isRequired,\n  hour: PropTypes.number.isRequired,\n  icon: PropTypes.string.isRequired,\n};\n\nexport default ForecastHour;\n"]},"metadata":{},"sourceType":"module"}