{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js\",\n    _this = this;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  scrollbar-color: lightgray #ffffff;\\n  scrollbar-width: thin;\\n  margin-top: 20px;\\n  padding-bottom: 20px;\\n  @media \", \" {\\n    order: 4;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n  margin: 20px 0;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  padding: 40px 0;\\n  opacity: 0;\\n  visibility: hidden;\\n  position: relative;\\n  top: 20px;\\n  animation: \", \" 0.5s 1.4s forwards;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloud, faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faSun, faSmog } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\nvar Results = styled.div(_templateObject(), ResultFadeIn);\n_c = Results;\nvar ForecastWrapper = styled.div(_templateObject2());\n_c2 = ForecastWrapper;\nvar Forecast = styled.div(_templateObject3(), device.laptop);\n_c3 = Forecast;\n\nvar Result = function Result(_ref) {\n  var weather = _ref.weather;\n  var main = weather.main,\n      forecast = weather.forecast;\n  var forecasts = forecast.map(function (item) {\n    return /*#__PURE__*/_jsxDEV(ForecastHour, {\n      temp: Math.floor(item.main.temp * 1) / 1,\n      icon: item.weather[0].icon,\n      month: item.dt_txt.slice(5, 7),\n      day: item.dt_txt.slice(8, 10),\n      hour: item.dt_txt.slice(11, 13) * 1,\n      date: dt_txt\n    }, item.dt, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, _this);\n  });\n  var weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faBolt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 19\n    }, _this);\n  } else if (main === \"Drizzle\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudRain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 19\n    }, _this);\n  } else if (main === \"Rain\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudShowersHeavy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 19\n    }, _this);\n  } else if (main === \"Snow\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSnowflake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, _this);\n  } else if (main === \"Clear\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }, _this);\n  } else if (main === \"Clouds\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloud\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }, _this);\n  } else {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSmog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 19\n    }, _this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Results, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n      icon: weatherIcon,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MediumLabel, {\n        weight: \"400\",\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Forecast, {\n        children: forecasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, _this);\n};\n\n_c4 = Result;\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    pressure: PropTypes.number,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Results\");\n$RefreshReg$(_c2, \"ForecastWrapper\");\n$RefreshReg$(_c3, \"Forecast\");\n$RefreshReg$(_c4, \"Result\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js"],"names":["React","PropTypes","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","MediumLabel","CurrentWeather","Results","div","ForecastWrapper","Forecast","laptop","Result","weather","main","forecast","forecasts","map","item","Math","floor","temp","icon","dt_txt","slice","dt","weatherIcon","propTypes","shape","city","string","country","date","description","number","humidity","wind","pressure","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const { main, forecast } = weather;\n\n  const forecasts = forecast.map((item) => (\n    <ForecastHour\n      key={item.dt}\n      temp={Math.floor(item.main.temp * 1) / 1}\n      icon={item.weather[0].icon}\n      month={item.dt_txt.slice(5, 7)}\n      day={item.dt_txt.slice(8, 10)}\n      hour={item.dt_txt.slice(11, 13) * 1}\n      date={dt_txt}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === \"Drizzle\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === \"Rain\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === \"Snow\") {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === \"Clear\") {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === \"Clouds\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <CurrentWeather icon={weatherIcon} weather={weather} />\n      <ForecastWrapper>\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    pressure: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}