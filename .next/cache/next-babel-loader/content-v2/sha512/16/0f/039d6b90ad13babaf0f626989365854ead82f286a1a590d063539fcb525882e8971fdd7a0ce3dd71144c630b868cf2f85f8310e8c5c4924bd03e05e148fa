{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js\";\nimport React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloud, faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faSun, faSmog } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({\n  weather\n}) => {\n  const {\n    current,\n    forecast\n  } = weather;\n  const forecasts = forecast.map(item => /*#__PURE__*/_jsxDEV(ForecastHour, {\n    temp: temperature,\n    icon: icon,\n    date: date,\n    description: description,\n    hour: item.dt_txt.slice(11, 13) * 1\n  }, item.dt, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this));\n  let weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faBolt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Drizzle\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudRain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Rain\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudShowersHeavy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Snow\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSnowflake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Clear\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Clouds\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloud\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }, this);\n  } else {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSmog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Results, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n      icon: weatherIcon,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MediumLabel, {\n        weight: \"400\",\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        children: forecasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    current: PropTypes.object,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js"],"names":["React","PropTypes","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","MediumLabel","CurrentWeather","Results","div","ForecastWrapper","Forecast","laptop","Result","weather","current","forecast","forecasts","map","item","temperature","icon","date","description","dt_txt","slice","dt","weatherIcon","main","propTypes","shape","object","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const { current, forecast } = weather;\n\n  const forecasts = forecast.map((item) => (\n    <ForecastHour\n      key={item.dt}\n      temp={temperature}\n      icon={icon}\n      date={date}\n      description={description}\n      hour={item.dt_txt.slice(11, 13) * 1}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === \"Drizzle\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === \"Rain\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === \"Snow\") {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === \"Clear\") {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === \"Clouds\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <CurrentWeather icon={weatherIcon} weather={weather} />\n      <ForecastWrapper>\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    current: PropTypes.object,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}