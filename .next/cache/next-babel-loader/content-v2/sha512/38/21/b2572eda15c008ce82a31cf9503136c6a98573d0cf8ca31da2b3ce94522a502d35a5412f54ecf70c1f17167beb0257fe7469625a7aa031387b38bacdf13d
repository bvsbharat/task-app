{"ast":null,"code":"import _slicedToArray from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 1500px;\\n  margin: 0 auto;\\n  height: calc(100vh - 64px);\\n  width: 100%;\\n  position: relative;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  height: 64px;\\n  margin: 0;\\n  padding: 20px 0;\\n  font-size: 20px;\\n  text-transform: uppercase;\\n  font-weight: 400;\\n  color: #ffffff;\\n  transition: 0.3s 1.4s;\\n  opacity: \", \";\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\nvar AppTitle = styled.h1(_templateObject(), function (_ref) {\n  var showLabel = _ref.showLabel;\n  return showLabel ? 1 : 0;\n}, function (_ref2) {\n  var secondary = _ref2.secondary;\n  return secondary && \"\\n    opacity: 1;\\n    height: auto;\\n    position: relative;\\n    padding: 20px 0;\\n    font-size: 30px;\\n    top: 20%;\\n    text-align: center;\\n    transition: .5s;\\n    @media \".concat(device.tablet, \" {\\n      font-size: 40px;\\n    }\\n    @media \").concat(device.laptop, \" {\\n      font-size: 50px;\\n    }\\n    @media \").concat(device.laptopL, \" {\\n      font-size: 60px;\\n    }\\n    @media \").concat(device.desktop, \" {\\n      font-size: 70px;\\n    }\\n    \\n  \");\n}, function (_ref3) {\n  var showResult = _ref3.showResult;\n  return showResult && \"\\n    opacity: 0;\\n    visibility: hidden;\\n    top: 10%;\\n  \";\n});\nvar WeatherWrapper = styled.div(_templateObject2()); // class App extends React.Component {\n\nvar WeatherInt = function WeatherInt(_ref4) {\n  _s();\n\n  var data = _ref4.data,\n      isLoading = _ref4.isLoading,\n      errorMessage = _ref4.errorMessage;\n  useEffect(function () {\n    console.log({\n      data: data,\n      isLoading: isLoading,\n      errorMessage: errorMessage\n    });\n  }, [data, isLoading, errorMessage]);\n\n  var handleInputChange = function handleInputChange(e) {\n    _this.setState({\n      value: e.target.value\n    });\n  };\n\n  var handleSearchCity = function handleSearchCity(e) {\n    e.preventDefault();\n    var value = _this.state.value;\n    var APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n    var weather = \"https://api.openweathermap.org/data/2.5/weather?q=\".concat(value, \"&APPID=\").concat(APIkey, \"&units=metric\");\n    var forecast = \"https://api.openweathermap.org/data/2.5/forecast?q=\".concat(value, \"&APPID=\").concat(APIkey, \"&units=metric\");\n    Promise.all([fetch(weather), fetch(forecast)]).then(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n          res1 = _ref6[0],\n          res2 = _ref6[1];\n\n      if (res1.ok && res2.ok) {\n        return Promise.all([res1.json(), res2.json()]);\n      }\n\n      throw Error(res1.statusText, res2.statusText);\n    }).then(function (_ref7) {\n      var _ref8 = _slicedToArray(_ref7, 2),\n          data1 = _ref8[0],\n          data2 = _ref8[1];\n\n      var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"Nocvember\", \"December\"];\n      var days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      var currentDate = new Date();\n      var date = \"\".concat(days[currentDate.getDay()], \" \").concat(currentDate.getDate(), \" \").concat(months[currentDate.getMonth()]);\n      var sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n      var sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n      var weatherInfo = {\n        city: data1.name,\n        country: data1.sys.country,\n        date: date,\n        description: data1.weather[0].description,\n        main: data1.weather[0].main,\n        temp: data1.main.temp,\n        highestTemp: data1.main.temp_max,\n        lowestTemp: data1.main.temp_min,\n        sunrise: sunrise,\n        sunset: sunset,\n        clouds: data1.clouds.all,\n        humidity: data1.main.humidity,\n        wind: data1.wind.speed,\n        forecast: data2.list\n      };\n\n      _this.setState({\n        weatherInfo: weatherInfo,\n        error: false\n      });\n    })[\"catch\"](function (error) {\n      console.log(error);\n\n      _this.setState({\n        error: true,\n        weatherInfo: null\n      });\n    });\n  }; // const { value, weatherInfo, error } = this.state;\n  // return (\n  //   <>\n  //     {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle> */}\n  //     <WeatherWrapper>\n  //       <AppTitle secondary showResult={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle>\n  //       <SearchCity\n  //         value={value}\n  //         showResult={(weatherInfo || error) && true}\n  //         change={this.handleInputChange}\n  //         submit={this.handleSearchCity}\n  //       />\n  //       {weatherInfo && <Result weather={weatherInfo} />}\n  //       {error && <NotFound error={error} />}\n  //     </WeatherWrapper>\n  //   </>\n  // );\n  // return <h1>fgd...</h1>;\n\n};\n\n_s(WeatherInt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WeatherInt;\nexport default WeatherInt;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInt\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js"],"names":["React","useEffect","styled","SearchCity","device","Result","NotFound","AppTitle","h1","showLabel","secondary","tablet","laptop","laptopL","desktop","showResult","WeatherWrapper","div","WeatherInt","data","isLoading","errorMessage","console","log","handleInputChange","e","setState","value","target","handleSearchCity","preventDefault","state","APIkey","weather","forecast","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","months","days","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","weatherInfo","city","name","country","description","main","temp","highestTemp","temp_max","lowestTemp","temp_min","clouds","humidity","wind","speed","list","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAV,oBAUD;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,CAAH,GAAO,CAApC;AAAA,CAVC,EAYV;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SACAA,SAAS,kMAUAN,MAAM,CAACO,MAVP,2DAaAP,MAAM,CAACQ,MAbP,2DAgBAR,MAAM,CAACS,OAhBP,2DAmBAT,MAAM,CAACU,OAnBP,gDADT;AAAA,CAZU,EAsCV;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACAA,UAAU,mEADV;AAAA,CAtCU,CAAd;AA+CA,IAAMC,cAAc,GAAGd,MAAM,CAACe,GAAV,oBAApB,C,CAQA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAAuC;AAAA;;AAAA,MAApCC,IAAoC,SAApCA,IAAoC;AAAA,MAA9BC,SAA8B,SAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AACxDpB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEJ,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,SAAS,EAATA,SAAR;AAAmBC,MAAAA,YAAY,EAAZA;AAAnB,KAAZ;AACD,GAFQ,EAEN,CAACF,IAAD,EAAOC,SAAP,EAAkBC,YAAlB,CAFM,CAAT;;AAIA,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAO;AAC/B,IAAA,KAAI,CAACC,QAAL,CAAc;AACZC,MAAAA,KAAK,EAAEF,CAAC,CAACG,MAAF,CAASD;AADJ,KAAd;AAGD,GAJD;;AAMA,MAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACJ,CAAD,EAAO;AAC9BA,IAAAA,CAAC,CAACK,cAAF;AAD8B,QAEtBH,KAFsB,GAEZ,KAAI,CAACI,KAFO,CAEtBJ,KAFsB;AAG9B,QAAMK,MAAM,GAAG,kCAAf,CAH8B,CAGqB;;AAEnD,QAAMC,OAAO,+DAAwDN,KAAxD,oBAAuEK,MAAvE,kBAAb;AACA,QAAME,QAAQ,gEAAyDP,KAAzD,oBAAwEK,MAAxE,kBAAd;AAEAG,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,CAACJ,OAAD,CAAN,EAAiBI,KAAK,CAACH,QAAD,CAAtB,CAAZ,EACGI,IADH,CACQ,iBAAkB;AAAA;AAAA,UAAhBC,IAAgB;AAAA,UAAVC,IAAU;;AACtB,UAAID,IAAI,CAACE,EAAL,IAAWD,IAAI,CAACC,EAApB,EAAwB;AACtB,eAAON,OAAO,CAACC,GAAR,CAAY,CAACG,IAAI,CAACG,IAAL,EAAD,EAAcF,IAAI,CAACE,IAAL,EAAd,CAAZ,CAAP;AACD;;AACD,YAAMC,KAAK,CAACJ,IAAI,CAACK,UAAN,EAAkBJ,IAAI,CAACI,UAAvB,CAAX;AACD,KANH,EAOGN,IAPH,CAOQ,iBAAoB;AAAA;AAAA,UAAlBO,KAAkB;AAAA,UAAXC,KAAW;;AACxB,UAAMC,MAAM,GAAG,CACb,SADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,WAXa,EAYb,UAZa,CAAf;AAcA,UAAMC,IAAI,GAAG,CACX,QADW,EAEX,QAFW,EAGX,SAHW,EAIX,WAJW,EAKX,UALW,EAMX,QANW,EAOX,UAPW,CAAb;AASA,UAAMC,WAAW,GAAG,IAAIC,IAAJ,EAApB;AACA,UAAMC,IAAI,aAAMH,IAAI,CAACC,WAAW,CAACG,MAAZ,EAAD,CAAV,cAAoCH,WAAW,CAACI,OAAZ,EAApC,cACRN,MAAM,CAACE,WAAW,CAACK,QAAZ,EAAD,CADE,CAAV;AAGA,UAAMC,MAAM,GAAG,IAAIL,IAAJ,CAASL,KAAK,CAACW,GAAN,CAAUD,MAAV,GAAmB,IAA5B,EACZE,kBADY,GAEZC,KAFY,CAEN,CAFM,EAEH,CAFG,CAAf;AAGA,UAAMC,OAAO,GAAG,IAAIT,IAAJ,CAASL,KAAK,CAACW,GAAN,CAAUG,OAAV,GAAoB,IAA7B,EACbF,kBADa,GAEbC,KAFa,CAEP,CAFO,EAEJ,CAFI,CAAhB;AAIA,UAAME,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAEhB,KAAK,CAACiB,IADM;AAElBC,QAAAA,OAAO,EAAElB,KAAK,CAACW,GAAN,CAAUO,OAFD;AAGlBZ,QAAAA,IAAI,EAAJA,IAHkB;AAIlBa,QAAAA,WAAW,EAAEnB,KAAK,CAACZ,OAAN,CAAc,CAAd,EAAiB+B,WAJZ;AAKlBC,QAAAA,IAAI,EAAEpB,KAAK,CAACZ,OAAN,CAAc,CAAd,EAAiBgC,IALL;AAMlBC,QAAAA,IAAI,EAAErB,KAAK,CAACoB,IAAN,CAAWC,IANC;AAOlBC,QAAAA,WAAW,EAAEtB,KAAK,CAACoB,IAAN,CAAWG,QAPN;AAQlBC,QAAAA,UAAU,EAAExB,KAAK,CAACoB,IAAN,CAAWK,QARL;AASlBX,QAAAA,OAAO,EAAPA,OATkB;AAUlBJ,QAAAA,MAAM,EAANA,MAVkB;AAWlBgB,QAAAA,MAAM,EAAE1B,KAAK,CAAC0B,MAAN,CAAanC,GAXH;AAYlBoC,QAAAA,QAAQ,EAAE3B,KAAK,CAACoB,IAAN,CAAWO,QAZH;AAalBC,QAAAA,IAAI,EAAE5B,KAAK,CAAC4B,IAAN,CAAWC,KAbC;AAclBxC,QAAAA,QAAQ,EAAEY,KAAK,CAAC6B;AAdE,OAApB;;AAgBA,MAAA,KAAI,CAACjD,QAAL,CAAc;AACZkC,QAAAA,WAAW,EAAXA,WADY;AAEZgB,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KA9DH,WA+DS,UAACA,KAAD,EAAW;AAChBtD,MAAAA,OAAO,CAACC,GAAR,CAAYqD,KAAZ;;AAEA,MAAA,KAAI,CAAClD,QAAL,CAAc;AACZkD,QAAAA,KAAK,EAAE,IADK;AAEZhB,QAAAA,WAAW,EAAE;AAFD,OAAd;AAID,KAtEH;AAuED,GA/ED,CAXwD,CA4FxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACD,CAnHD;;GAAM1C,U;;KAAAA,U;AAqHN,eAAeA,UAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\n// class App extends React.Component {\n\nconst WeatherInt = ({ data, isLoading, errorMessage }) => {\n  useEffect(() => {\n    console.log({ data, isLoading, errorMessage });\n  }, [data, isLoading, errorMessage]);\n\n  const handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  const handleSearchCity = (e) => {\n    e.preventDefault();\n    const { value } = this.state;\n    const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"Nocvember\",\n          \"December\",\n        ];\n        const days = [\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  // const { value, weatherInfo, error } = this.state;\n  // return (\n  //   <>\n  //     {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle> */}\n  //     <WeatherWrapper>\n  //       <AppTitle secondary showResult={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle>\n  //       <SearchCity\n  //         value={value}\n  //         showResult={(weatherInfo || error) && true}\n  //         change={this.handleInputChange}\n  //         submit={this.handleSearchCity}\n  //       />\n  //       {weatherInfo && <Result weather={weatherInfo} />}\n  //       {error && <NotFound error={error} />}\n  //     </WeatherWrapper>\n  //   </>\n  // );\n\n  // return <h1>fgd...</h1>;\n};\n\nexport default WeatherInt;\n"]},"metadata":{},"sourceType":"module"}