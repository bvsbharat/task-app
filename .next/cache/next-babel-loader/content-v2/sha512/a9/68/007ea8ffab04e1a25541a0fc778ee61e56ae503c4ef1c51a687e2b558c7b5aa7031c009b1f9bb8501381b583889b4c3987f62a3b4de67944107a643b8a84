{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js\";\nimport React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({\n  showLabel\n}) => showLabel ? 1 : 0};\n\n  ${({\n  secondary\n}) => secondary && `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({\n  showResult\n}) => showResult && `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`; // class App extends React.Component {\n\nconst WeatherInt = ({\n  data,\n  isLoading,\n  errorMessage\n}) => {\n  useEffect(() => {\n    console.log({\n      data,\n      isLoading,\n      errorMessage\n    });\n  }, [data, isLoading, errorMessage]);\n\n  const handleInputChange = e => {\n    this.setState({\n      value: e.target.value\n    });\n  };\n\n  const handleSearchCity = e => {\n    e.preventDefault();\n    const {\n      value\n    } = this.state;\n    const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n    Promise.all([fetch(weather), fetch(forecast)]).then(([res1, res2]) => {\n      if (res1.ok && res2.ok) {\n        return Promise.all([res1.json(), res2.json()]);\n      }\n\n      throw Error(res1.statusText, res2.statusText);\n    }).then(([data1, data2]) => {\n      const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"Nocvember\", \"December\"];\n      const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n      const currentDate = new Date();\n      const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n      const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n      const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n      const weatherInfo = {\n        city: data1.name,\n        country: data1.sys.country,\n        date,\n        description: data1.weather[0].description,\n        main: data1.weather[0].main,\n        temp: data1.main.temp,\n        highestTemp: data1.main.temp_max,\n        lowestTemp: data1.main.temp_min,\n        sunrise,\n        sunset,\n        clouds: data1.clouds.all,\n        humidity: data1.main.humidity,\n        wind: data1.wind.speed,\n        forecast: data2.list\n      };\n      this.setState({\n        weatherInfo,\n        error: false\n      });\n    }).catch(error => {\n      console.log(error);\n      this.setState({\n        error: true,\n        weatherInfo: null\n      });\n    });\n  };\n\n  const {\n    value,\n    weatherInfo,\n    error\n  } = this.state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WeatherWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(AppTitle, {\n        secondary: true,\n        showResult: (weatherInfo || error) && true,\n        children: \"Weather app\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchCity, {\n        value: value,\n        showResult: (weatherInfo || error) && true,\n        change: this.handleInputChange,\n        submit: this.handleSearchCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), weatherInfo && /*#__PURE__*/_jsxDEV(Result, {\n        weather: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(NotFound, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default WeatherInt;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js"],"names":["React","useEffect","styled","SearchCity","device","Result","NotFound","AppTitle","h1","showLabel","secondary","tablet","laptop","laptopL","desktop","showResult","WeatherWrapper","div","WeatherInt","data","isLoading","errorMessage","console","log","handleInputChange","e","setState","value","target","handleSearchCity","preventDefault","state","APIkey","weather","forecast","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","months","days","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","weatherInfo","city","name","country","description","main","temp","highestTemp","temp_max","lowestTemp","temp_min","clouds","humidity","wind","speed","list","error","catch"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\n// class App extends React.Component {\n\nconst WeatherInt = ({ data, isLoading, errorMessage }) => {\n  useEffect(() => {\n    console.log({ data, isLoading, errorMessage });\n  }, [data, isLoading, errorMessage]);\n\n  const handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  const handleSearchCity = (e) => {\n    e.preventDefault();\n    const { value } = this.state;\n    const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"Nocvember\",\n          \"December\",\n        ];\n        const days = [\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  const { value, weatherInfo, error } = this.state;\n  return (\n    <>\n      {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n          Weather app\n        </AppTitle> */}\n      <WeatherWrapper>\n        <AppTitle secondary showResult={(weatherInfo || error) && true}>\n          Weather app\n        </AppTitle>\n        <SearchCity\n          value={value}\n          showResult={(weatherInfo || error) && true}\n          change={this.handleInputChange}\n          submit={this.handleSearchCity}\n        />\n        {weatherInfo && <Result weather={weatherInfo} />}\n        {error && <NotFound error={error} />}\n      </WeatherWrapper>\n    </>\n  );\n};\n\nexport default WeatherInt;\n"]},"metadata":{},"sourceType":"module"}