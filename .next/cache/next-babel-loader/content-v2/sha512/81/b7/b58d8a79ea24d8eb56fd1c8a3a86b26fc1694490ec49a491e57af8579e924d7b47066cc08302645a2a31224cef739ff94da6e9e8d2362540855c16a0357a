{"ast":null,"code":"export const SET_DATA = \"SET_DATA\";\nexport const FAILURE = \"FAILURE\";\nimport axios from \"axios\";\nimport { mapData } from \"../utils\";\nexport const getData = options => async dispatch => {\n  const {\n    unit,\n    lang,\n    key,\n    query\n  } = options;\n  const params = {\n    appid: key,\n    lang,\n    units: unit,\n    q: query\n  };\n  const geoCode = `http://api.openweathermap.org/geo/1.0/direct?=${value}&&limit=1&appid={API key}`;\n  const forecast = \"//api.openweathermap.org/data/2.5/onecall\";\n  const geocode = await axios.get(geoCode);\n\n  try {\n    const forecastResponse = await axios.get(forecast);\n    const payload = await mapData(forecastResponse, lang);\n    dispatch({\n      type: SET_DATA,\n      payload: payload\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({\n      type: FAILURE,\n      payload: {\n        error: error.message || error\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/redux/action.js"],"names":["SET_DATA","FAILURE","axios","mapData","getData","options","dispatch","unit","lang","key","query","params","appid","units","q","geoCode","value","forecast","geocode","get","forecastResponse","payload","type","error","console","message"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA,OAAO,MAAMC,OAAO,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AACtD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA;AAAnB,MAA6BL,OAAnC;AACA,QAAMM,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEH,GADM;AAEbD,IAAAA,IAFa;AAGbK,IAAAA,KAAK,EAAEN,IAHM;AAIbO,IAAAA,CAAC,EAAEJ;AAJU,GAAf;AAOA,QAAMK,OAAO,GAAI,iDAAgDC,KAAM,2BAAvE;AACA,QAAMC,QAAQ,GAAG,2CAAjB;AAEA,QAAMC,OAAO,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAUJ,OAAV,CAAtB;;AAEA,MAAI;AACF,UAAMK,gBAAgB,GAAG,MAAMlB,KAAK,CAACiB,GAAN,CAAUF,QAAV,CAA/B;AAEA,UAAMI,OAAO,GAAG,MAAMlB,OAAO,CAACiB,gBAAD,EAAmBZ,IAAnB,CAA7B;AAEAF,IAAAA,QAAQ,CAAC;AACPgB,MAAAA,IAAI,EAAEtB,QADC;AAEPqB,MAAAA,OAAO,EAAEA;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACAnB,IAAAA,QAAQ,CAAC;AAAEgB,MAAAA,IAAI,EAAErB,OAAR;AAAiBoB,MAAAA,OAAO,EAAE;AAAEE,QAAAA,KAAK,EAAEA,KAAK,CAACE,OAAN,IAAiBF;AAA1B;AAA1B,KAAD,CAAR;AACD;AACF,CA3BM","sourcesContent":["export const SET_DATA = \"SET_DATA\";\nexport const FAILURE = \"FAILURE\";\nimport axios from \"axios\";\nimport { mapData } from \"../utils\";\n\nexport const getData = (options) => async (dispatch) => {\n  const { unit, lang, key, query } = options;\n  const params = {\n    appid: key,\n    lang,\n    units: unit,\n    q: query,\n  };\n\n  const geoCode = `http://api.openweathermap.org/geo/1.0/direct?=${value}&&limit=1&appid={API key}`;\n  const forecast = \"//api.openweathermap.org/data/2.5/onecall\";\n\n  const geocode = await axios.get(geoCode);\n\n  try {\n    const forecastResponse = await axios.get(forecast);\n\n    const payload = await mapData(forecastResponse, lang);\n\n    dispatch({\n      type: SET_DATA,\n      payload: payload,\n    });\n  } catch (error) {\n    console.error(error.message);\n    dispatch({ type: FAILURE, payload: { error: error.message || error } });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}