{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js\",\n    _this = this;\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nvar WeatherInt = function WeatherInt(_ref) {\n  var unitsLabels = _ref.unitsLabels,\n      showForecast = _ref.showForecast,\n      lang = _ref.lang,\n      data = _ref.data,\n      locationLabel = _ref.locationLabel,\n      isLoading = _ref.isLoading,\n      errorMessage = _ref.errorMessage,\n      theme = _ref.theme;\n\n  if (true || data) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"weather wrapper component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }, _this);\n  }\n\n  return null;\n}; // WeatherInt.PropTypes = {\n//   data: PropTypes.object,\n//   isLoading: PropTypes.bool,\n//   errorMessage: PropTypes.string,\n//   unitsLabels: PropTypes.object,\n//   showForecast: PropTypes.bool,\n//   lang: PropTypes.string,\n//   locationLabel: PropTypes.string,\n//   theme: PropTypes.object,\n// };\n// WeatherInt.defaultProps = {\n//   data: null,\n//   locationLabel: \"\",\n//   errorMessage: null,\n//   isLoading: false,\n//   unitsLabels: {\n//     temperature: \"C\",\n//     windSpeed: \"Km/h\",\n//   },\n//   showForecast: true,\n//   lang: \"en\",\n//   theme: defaultTheme,\n// };\n\n\n_c = WeatherInt;\nexport default WeatherInt;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInt\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js"],"names":["React","PropTypes","WeatherInt","unitsLabels","showForecast","lang","data","locationLabel","isLoading","errorMessage","theme"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OASb;AAAA,MARJC,WAQI,QARJA,WAQI;AAAA,MAPJC,YAOI,QAPJA,YAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,SAGI,QAHJA,SAGI;AAAA,MAFJC,YAEI,QAFJA,YAEI;AAAA,MADJC,KACI,QADJA,KACI;;AACJ,MAAI,QAAQJ,IAAZ,EAAkB;AAChB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAP;AACD;;AAED,SAAO,IAAP;AACD,CAfD,C,CAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAxCMJ,U;AA0CN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst WeatherInt = ({\n  unitsLabels,\n  showForecast,\n  lang,\n  data,\n  locationLabel,\n  isLoading,\n  errorMessage,\n  theme,\n}) => {\n  if (true || data) {\n    return <div>weather wrapper component</div>;\n  }\n\n  return null;\n};\n\n// WeatherInt.PropTypes = {\n//   data: PropTypes.object,\n//   isLoading: PropTypes.bool,\n//   errorMessage: PropTypes.string,\n//   unitsLabels: PropTypes.object,\n//   showForecast: PropTypes.bool,\n//   lang: PropTypes.string,\n//   locationLabel: PropTypes.string,\n//   theme: PropTypes.object,\n// };\n\n// WeatherInt.defaultProps = {\n//   data: null,\n//   locationLabel: \"\",\n//   errorMessage: null,\n//   isLoading: false,\n//   unitsLabels: {\n//     temperature: \"C\",\n//     windSpeed: \"Km/h\",\n//   },\n//   showForecast: true,\n//   lang: \"en\",\n//   theme: defaultTheme,\n// };\n\nexport default WeatherInt;\n"]},"metadata":{},"sourceType":"module"}