{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  max-width: 1500px;\\n  margin: 0 auto;\\n  height: calc(100vh - 64px);\\n  width: 100%;\\n  position: relative;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: block;\\n  height: 64px;\\n  margin: 0;\\n  padding: 20px 0;\\n  font-size: 20px;\\n  text-transform: uppercase;\\n  font-weight: 400;\\n  color: #ffffff;\\n  transition: 0.3s 1.4s;\\n  opacity: \", \";\\n\\n  \", \"\\n\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\nvar AppTitle = styled.h1(_templateObject(), function (_ref) {\n  var showLabel = _ref.showLabel;\n  return showLabel ? 1 : 0;\n}, function (_ref2) {\n  var secondary = _ref2.secondary;\n  return secondary && \"\\n    opacity: 1;\\n    height: auto;\\n    position: relative;\\n    padding: 20px 0;\\n    font-size: 30px;\\n    top: 20%;\\n    text-align: center;\\n    transition: .5s;\\n    @media \".concat(device.tablet, \" {\\n      font-size: 40px;\\n    }\\n    @media \").concat(device.laptop, \" {\\n      font-size: 50px;\\n    }\\n    @media \").concat(device.laptopL, \" {\\n      font-size: 60px;\\n    }\\n    @media \").concat(device.desktop, \" {\\n      font-size: 70px;\\n    }\\n    \\n  \");\n}, function (_ref3) {\n  var showResult = _ref3.showResult;\n  return showResult && \"\\n    opacity: 0;\\n    visibility: hidden;\\n    top: 10%;\\n  \";\n});\nvar WeatherWrapper = styled.div(_templateObject2()); // class App extends React.Component {\n\nvar WeatherInt = function WeatherInt(_ref4) {\n  _s();\n\n  var data = _ref4.data,\n      isLoading = _ref4.isLoading,\n      errorMessage = _ref4.errorMessage;\n  useEffect(function () {\n    console.log({\n      data: data,\n      isLoading: isLoading,\n      errorMessage: errorMessage\n    });\n  }, []); // handleInputChange = (e) => {\n  //   this.setState({\n  //     value: e.target.value,\n  //   });\n  // };\n  // handleSearchCity = (e) => {\n  //   e.preventDefault();\n  //   const { value } = this.state;\n  //   const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n  //   const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n  //   const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n  //   Promise.all([fetch(weather), fetch(forecast)])\n  //     .then(([res1, res2]) => {\n  //       if (res1.ok && res2.ok) {\n  //         return Promise.all([res1.json(), res2.json()]);\n  //       }\n  //       throw Error(res1.statusText, res2.statusText);\n  //     })\n  //     .then(([data1, data2]) => {\n  //       const months = [\n  //         \"January\",\n  //         \"February\",\n  //         \"March\",\n  //         \"April\",\n  //         \"May\",\n  //         \"June\",\n  //         \"July\",\n  //         \"August\",\n  //         \"September\",\n  //         \"October\",\n  //         \"Nocvember\",\n  //         \"December\",\n  //       ];\n  //       const days = [\n  //         \"Sunday\",\n  //         \"Monday\",\n  //         \"Tuesday\",\n  //         \"Wednesday\",\n  //         \"Thursday\",\n  //         \"Friday\",\n  //         \"Saturday\",\n  //       ];\n  //       const currentDate = new Date();\n  //       const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n  //         months[currentDate.getMonth()]\n  //       }`;\n  //       const sunset = new Date(data1.sys.sunset * 1000)\n  //         .toLocaleTimeString()\n  //         .slice(0, 5);\n  //       const sunrise = new Date(data1.sys.sunrise * 1000)\n  //         .toLocaleTimeString()\n  //         .slice(0, 5);\n  //       const weatherInfo = {\n  //         city: data1.name,\n  //         country: data1.sys.country,\n  //         date,\n  //         description: data1.weather[0].description,\n  //         main: data1.weather[0].main,\n  //         temp: data1.main.temp,\n  //         highestTemp: data1.main.temp_max,\n  //         lowestTemp: data1.main.temp_min,\n  //         sunrise,\n  //         sunset,\n  //         clouds: data1.clouds.all,\n  //         humidity: data1.main.humidity,\n  //         wind: data1.wind.speed,\n  //         forecast: data2.list,\n  //       };\n  //       this.setState({\n  //         weatherInfo,\n  //         error: false,\n  //       });\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n  //       this.setState({\n  //         error: true,\n  //         weatherInfo: null,\n  //       });\n  //     });\n  // };\n  // const { value, weatherInfo, error } = this.state;\n  // return (\n  //   <>\n  //     {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle> */}\n  //     <WeatherWrapper>\n  //       <AppTitle secondary showResult={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle>\n  //       <SearchCity\n  //         value={value}\n  //         showResult={(weatherInfo || error) && true}\n  //         change={this.handleInputChange}\n  //         submit={this.handleSearchCity}\n  //       />\n  //       {weatherInfo && <Result weather={weatherInfo} />}\n  //       {error && <NotFound error={error} />}\n  //     </WeatherWrapper>\n  //   </>\n  // );\n\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(WeatherInt, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = WeatherInt;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherInt\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/WeatherInt.js"],"names":["React","styled","SearchCity","device","Result","NotFound","AppTitle","h1","showLabel","secondary","tablet","laptop","laptopL","desktop","showResult","WeatherWrapper","div","WeatherInt","data","isLoading","errorMessage","useEffect","console","log","App"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,IAAMC,QAAQ,GAAGL,MAAM,CAACM,EAAV,oBAUD;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,CAAH,GAAO,CAApC;AAAA,CAVC,EAYV;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SACAA,SAAS,kMAUAN,MAAM,CAACO,MAVP,2DAaAP,MAAM,CAACQ,MAbP,2DAgBAR,MAAM,CAACS,OAhBP,2DAmBAT,MAAM,CAACU,OAnBP,gDADT;AAAA,CAZU,EAsCV;AAAA,MAAGC,UAAH,SAAGA,UAAH;AAAA,SACAA,UAAU,mEADV;AAAA,CAtCU,CAAd;AA+CA,IAAMC,cAAc,GAAGd,MAAM,CAACe,GAAV,oBAApB,C,CAQA;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAAuC;AAAA;;AAAA,MAApCC,IAAoC,SAApCA,IAAoC;AAAA,MAA9BC,SAA8B,SAA9BA,SAA8B;AAAA,MAAnBC,YAAmB,SAAnBA,YAAmB;AACxDC,EAAAA,SAAS,CAAC,YAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,MAAAA,IAAI,EAAJA,IAAF;AAAQC,MAAAA,SAAS,EAATA,SAAR;AAAmBC,MAAAA,YAAY,EAAZA;AAAnB,KAAZ;AACD,GAFQ,EAEN,EAFM,CAAT,CADwD,CAKxsBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAnHD;;GAAMH,U;;KAAAA,U;AAqHN,eAAeO,GAAf","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\n// class App extends React.Component {\n\nconst WeatherInt = ({ data, isLoading, errorMessage }) => {\n  useEffect(() => {\n    console.log({ data, isLoading, errorMessage });\n  }, []);\n\n  // handleInputChange = (e) => {\n  //   this.setState({\n  //     value: e.target.value,\n  //   });\n  // };\n\n  // handleSearchCity = (e) => {\n  //   e.preventDefault();\n  //   const { value } = this.state;\n  //   const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n  //   const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n  //   const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n  //   Promise.all([fetch(weather), fetch(forecast)])\n  //     .then(([res1, res2]) => {\n  //       if (res1.ok && res2.ok) {\n  //         return Promise.all([res1.json(), res2.json()]);\n  //       }\n  //       throw Error(res1.statusText, res2.statusText);\n  //     })\n  //     .then(([data1, data2]) => {\n  //       const months = [\n  //         \"January\",\n  //         \"February\",\n  //         \"March\",\n  //         \"April\",\n  //         \"May\",\n  //         \"June\",\n  //         \"July\",\n  //         \"August\",\n  //         \"September\",\n  //         \"October\",\n  //         \"Nocvember\",\n  //         \"December\",\n  //       ];\n  //       const days = [\n  //         \"Sunday\",\n  //         \"Monday\",\n  //         \"Tuesday\",\n  //         \"Wednesday\",\n  //         \"Thursday\",\n  //         \"Friday\",\n  //         \"Saturday\",\n  //       ];\n  //       const currentDate = new Date();\n  //       const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n  //         months[currentDate.getMonth()]\n  //       }`;\n  //       const sunset = new Date(data1.sys.sunset * 1000)\n  //         .toLocaleTimeString()\n  //         .slice(0, 5);\n  //       const sunrise = new Date(data1.sys.sunrise * 1000)\n  //         .toLocaleTimeString()\n  //         .slice(0, 5);\n\n  //       const weatherInfo = {\n  //         city: data1.name,\n  //         country: data1.sys.country,\n  //         date,\n  //         description: data1.weather[0].description,\n  //         main: data1.weather[0].main,\n  //         temp: data1.main.temp,\n  //         highestTemp: data1.main.temp_max,\n  //         lowestTemp: data1.main.temp_min,\n  //         sunrise,\n  //         sunset,\n  //         clouds: data1.clouds.all,\n  //         humidity: data1.main.humidity,\n  //         wind: data1.wind.speed,\n  //         forecast: data2.list,\n  //       };\n  //       this.setState({\n  //         weatherInfo,\n  //         error: false,\n  //       });\n  //     })\n  //     .catch((error) => {\n  //       console.log(error);\n\n  //       this.setState({\n  //         error: true,\n  //         weatherInfo: null,\n  //       });\n  //     });\n  // };\n\n  // const { value, weatherInfo, error } = this.state;\n  // return (\n  //   <>\n  //     {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle> */}\n  //     <WeatherWrapper>\n  //       <AppTitle secondary showResult={(weatherInfo || error) && true}>\n  //         Weather app\n  //       </AppTitle>\n  //       <SearchCity\n  //         value={value}\n  //         showResult={(weatherInfo || error) && true}\n  //         change={this.handleInputChange}\n  //         submit={this.handleSearchCity}\n  //       />\n  //       {weatherInfo && <Result weather={weatherInfo} />}\n  //       {error && <NotFound error={error} />}\n  //     </WeatherWrapper>\n  //   </>\n  // );\n\n  return <h1>Loading...</h1>;\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}