{"ast":null,"code":"import _defineProperty from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\nimport { SET_DATA, FAILURE } from \"./action\";\nvar initialState = {\n  data: null,\n  errorMessage: null\n};\nvar composeEnhancers = true && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose; // create your reducer\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case HYDRATE:\n      var nextState = _objectSpread(_objectSpread({}, state), action.payload);\n\n      if (state.count) nextState.count = state.count; // preserve count value on client side navigation\n\n      return nextState;\n\n    case SET_DATA:\n      var _state = _objectSpread({}, state);\n\n      _state.data = action.payload;\n      return _state;\n\n    case FAILURE:\n      console.log(\"Error\", action);\n      return {\n        data: null,\n        errorMessage: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nvar enhancer = composeEnhancers(applyMiddleware(thunk.withExtraArgument(axios))); // create a makeStore function\n\nvar makeStore = function makeStore(context) {\n  return createStore(reducer, enhancer);\n}; // export an assembled wrapper\n\n\nexport var wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/redux/store.js"],"names":["createStore","applyMiddleware","compose","thunk","axios","createWrapper","HYDRATE","composeWithDevTools","SET_DATA","FAILURE","initialState","data","errorMessage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","reducer","state","action","type","nextState","payload","count","_state","console","log","enhancer","withExtraArgument","makeStore","context","wrapper","debug"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,UAAlC;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB;AAKA,IAAMC,gBAAgB,GACpB,QAA8BC,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,CAC1C;AAD0C,CAA5C,CADJ,GAIIb,OALN,C,CAOA;;AACA,IAAMc,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,OAAL;AACE,UAAMc,SAAS,mCACVH,KADU,GAEVC,MAAM,CAACG,OAFG,CAAf;;AAIA,UAAIJ,KAAK,CAACK,KAAV,EAAiBF,SAAS,CAACE,KAAV,GAAkBL,KAAK,CAACK,KAAxB,CALnB,CAKkD;;AAChD,aAAOF,SAAP;;AACF,SAAKZ,QAAL;AACE,UAAMe,MAAM,qBAAQN,KAAR,CAAZ;;AACAM,MAAAA,MAAM,CAACZ,IAAP,GAAcO,MAAM,CAACG,OAArB;AACA,aAAOE,MAAP;;AACF,SAAKd,OAAL;AACEe,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBP,MAArB;AACA,aAAO;AAAEP,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,YAAY,EAAEM,MAAM,CAACG;AAAnC,OAAP;;AACF;AACE,aAAOJ,KAAP;AAhBJ;AAkBD,CAnBD;;AAqBA,IAAMS,QAAQ,GAAGb,gBAAgB,CAC/BZ,eAAe,CAACE,KAAK,CAACwB,iBAAN,CAAwBvB,KAAxB,CAAD,CADgB,CAAjC,C,CAIA;;AACA,IAAMwB,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD;AAAA,SAAa7B,WAAW,CAACgB,OAAD,EAAUU,QAAV,CAAxB;AAAA,CAAlB,C,CAEA;;;AACA,OAAO,IAAMI,OAAO,GAAGzB,aAAa,CAACuB,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport axios from \"axios\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\nimport { composeWithDevTools } from \"remote-redux-devtools\";\nimport { SET_DATA, FAILURE } from \"./action\";\n\nconst initialState = {\n  data: null,\n  errorMessage: null,\n};\n\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\n// create your reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      const nextState = {\n        ...state, // use previous state\n        ...action.payload, // apply delta from hydration\n      };\n      if (state.count) nextState.count = state.count; // preserve count value on client side navigation\n      return nextState;\n    case SET_DATA:\n      const _state = { ...state };\n      _state.data = action.payload;\n      return _state;\n    case FAILURE:\n      console.log(\"Error\", action);\n      return { data: null, errorMessage: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst enhancer = composeEnhancers(\n  applyMiddleware(thunk.withExtraArgument(axios))\n);\n\n// create a makeStore function\nconst makeStore = (context) => createStore(reducer, enhancer);\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}