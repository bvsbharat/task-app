{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/pages/task/weather.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getData } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchCity from \"../../components/WeatherInt/SearchCity\";\nimport Title from \"../../components/WeatherInt/Title\";\nimport Result from \"../../components/WeatherInt/Result\";\nimport NotFound from \"../../components/WeatherInt/NotFound\";\nimport Setting from \"../../components/Setting\";\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nconst WeatherInt = () => {\n  const dispatch = useDispatch();\n  const {\n    0: value,\n    1: setValue\n  } = useState(\"\");\n  const weatherInfo = useSelector(state => state.data);\n  const error = useSelector(state => state.error);\n  const unitType = useSelector(state => state.UnitType);\n  useEffect(() => {\n    if (false) {\n      if (localStorage.getItem(\"location\")) {\n        setValue(localStorage.getItem(\"location\"));\n        dispatch(getData({\n          query: localStorage.getItem(\"location\"),\n          unit: unitType // values are (metric, standard, imperial)\n\n        }));\n      }\n    }\n  }, []);\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleSearchCity = e => {\n    e.preventDefault();\n\n    if (false) {\n      localStorage.setItem(\"location\", value);\n    }\n\n    dispatch(getData({\n      query: value,\n      unit: unitType // values are (metric, standard, imperial)\n\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(WeatherWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(Title, {\n        weatherInfo: weatherInfo,\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SearchCity, {\n        value: value,\n        showResult: (weatherInfo || error) && true,\n        change: handleInputChange,\n        submit: handleSearchCity\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), weatherInfo && /*#__PURE__*/_jsxDEV(Result, {\n        weather: weatherInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }, this), error && /*#__PURE__*/_jsxDEV(NotFound, {\n        error: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(Setting, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\nexport default WeatherInt;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/pages/task/weather.js"],"names":["React","useEffect","useState","getData","useSelector","useDispatch","styled","SearchCity","Title","Result","NotFound","Setting","WeatherWrapper","div","WeatherInt","dispatch","value","setValue","weatherInfo","state","data","error","unitType","UnitType","localStorage","getItem","query","unit","handleInputChange","e","target","handleSearchCity","preventDefault","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,MAAMC,cAAc,GAAGN,MAAM,CAACO,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAMC,UAAU,GAAG,MAAM;AACvB,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,QAAM;AAAA,OAACW,KAAD;AAAA,OAAQC;AAAR,MAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMgB,WAAW,GAAGd,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/B;AACA,QAAMC,KAAK,GAAGjB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACE,KAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGlB,WAAW,CAAEe,KAAD,IAAWA,KAAK,CAACI,QAAlB,CAA5B;AAEAtB,EAAAA,SAAS,CAAC,MAAM;AACd,eAAmC;AACjC,UAAIuB,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAJ,EAAsC;AACpCR,QAAAA,QAAQ,CAACO,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,CAAR;AACAV,QAAAA,QAAQ,CACNZ,OAAO,CAAC;AACNuB,UAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,UAArB,CADD;AAENE,UAAAA,IAAI,EAAEL,QAFA,CAEU;;AAFV,SAAD,CADD,CAAR;AAMD;AACF;AACF,GAZQ,EAYN,EAZM,CAAT;;AAcA,QAAMM,iBAAiB,GAAIC,CAAD,IAAO;AAC/BZ,IAAAA,QAAQ,CAACY,CAAC,CAACC,MAAF,CAASd,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMe,gBAAgB,GAAIF,CAAD,IAAO;AAC9BA,IAAAA,CAAC,CAACG,cAAF;;AAEA,eAAmC;AACjCR,MAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAiCjB,KAAjC;AACD;;AAEDD,IAAAA,QAAQ,CACNZ,OAAO,CAAC;AACNuB,MAAAA,KAAK,EAAEV,KADD;AAENW,MAAAA,IAAI,EAAEL,QAFA,CAEU;;AAFV,KAAD,CADD,CAAR;AAMD,GAbD;;AAeA,sBACE;AAAA,2BACE,QAAC,cAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,WAAW,EAAEJ,WAApB;AAAiC,QAAA,KAAK,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,UAAD;AACE,QAAA,KAAK,EAAEL,KADT;AAEE,QAAA,UAAU,EAAE,CAACE,WAAW,IAAIG,KAAhB,KAA0B,IAFxC;AAGE,QAAA,MAAM,EAAEO,iBAHV;AAIE,QAAA,MAAM,EAAEG;AAJV;AAAA;AAAA;AAAA;AAAA,cAFF,EAQGb,WAAW,iBAAI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cARlB,EASGG,KAAK,iBAAI,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,cATZ,eAUE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgBD,CAxDD;;AA0DA,eAAeP,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { getData } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\nimport SearchCity from \"../../components/WeatherInt/SearchCity\";\nimport Title from \"../../components/WeatherInt/Title\";\nimport Result from \"../../components/WeatherInt/Result\";\nimport NotFound from \"../../components/WeatherInt/NotFound\";\nimport Setting from \"../../components/Setting\";\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nconst WeatherInt = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"\");\n  const weatherInfo = useSelector((state) => state.data);\n  const error = useSelector((state) => state.error);\n  const unitType = useSelector((state) => state.UnitType);\n\n  useEffect(() => {\n    if (typeof window !== \"undefined\") {\n      if (localStorage.getItem(\"location\")) {\n        setValue(localStorage.getItem(\"location\"));\n        dispatch(\n          getData({\n            query: localStorage.getItem(\"location\"),\n            unit: unitType, // values are (metric, standard, imperial)\n          })\n        );\n      }\n    }\n  }, []);\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleSearchCity = (e) => {\n    e.preventDefault();\n\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(\"location\", value);\n    }\n\n    dispatch(\n      getData({\n        query: value,\n        unit: unitType, // values are (metric, standard, imperial)\n      })\n    );\n  };\n\n  return (\n    <>\n      <WeatherWrapper>\n        <Title weatherInfo={weatherInfo} error={error} />\n        <SearchCity\n          value={value}\n          showResult={(weatherInfo || error) && true}\n          change={handleInputChange}\n          submit={handleSearchCity}\n        />\n        {weatherInfo && <Result weather={weatherInfo} />}\n        {error && <NotFound error={error} />}\n        <Setting />\n      </WeatherWrapper>\n    </>\n  );\n};\n\nexport default WeatherInt;\n"]},"metadata":{},"sourceType":"module"}