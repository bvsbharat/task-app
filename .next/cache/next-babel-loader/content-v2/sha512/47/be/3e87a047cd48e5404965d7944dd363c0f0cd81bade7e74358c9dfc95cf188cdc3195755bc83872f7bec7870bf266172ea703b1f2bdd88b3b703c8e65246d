{"ast":null,"code":"import _regeneratorRuntime from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport dayjs from \"dayjs\";\nimport { getIcon } from \"./iconsMap\";\n\nvar formatDate = function formatDate(dte, lang) {\n  if (lang && lang !== \"en\") {\n    dayjs.locale(lang.replace(\"_\", \"-\"));\n  }\n\n  if (dte && dayjs().isValid(dte)) {\n    return dayjs.unix(dte).format(\"ddd D MMMM\");\n  }\n\n  return \"\";\n};\n\nvar mapCurrent = function mapCurrent(day, lang) {\n  return {\n    date: formatDate(day.dt, lang),\n    description: day.weather[0] ? day.weather[0].description : null,\n    icon: day.weather[0] && getIcon(day.weather[0].icon),\n    temperature: {\n      current: day.temp.toFixed(0),\n      min: undefined,\n      // openweather doesnt provide min/max on current weather\n      max: undefined\n    },\n    wind: day.wind_speed.toFixed(0),\n    humidity: day.humidity,\n    pressure: day.pressure\n  };\n};\n\nvar mapForecast = function mapForecast(forecast, lang) {\n  var mappedForecast = [];\n\n  for (var i = 0; i < 5; i += 1) {\n    mappedForecast.push({\n      date: formatDate(forecast[i].dt, lang),\n      description: forecast[i].weather[0] ? forecast[i].weather[0].description : null,\n      icon: forecast[i].weather[0] && getIcon(forecast[i].weather[0].icon),\n      temperature: {\n        min: forecast[i].temp.min.toFixed(0),\n        max: forecast[i].temp.max.toFixed(0)\n      },\n      wind: forecast[i].wind_speed.toFixed(0),\n      humidity: forecast[i].humidity\n    });\n  }\n\n  return mappedForecast;\n};\n\nvar mapData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, lang) {\n    var _data, todayData, forecastData, mapped, daysData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!data) {\n              _context.next = 6;\n              break;\n            }\n\n            _data = _slicedToArray(data, 2), todayData = _data[0], forecastData = _data[1];\n            console.log(forecastData, todayData);\n            mapped = {};\n\n            if (forecastData.date && todayData.date) {\n              daysData = forecastData;\n              mapped.current = mapCurrent(todayData, lang);\n              mapped.forecast = mapForecast(daysData);\n            }\n\n            return _context.abrupt(\"return\", mapped);\n\n          case 6:\n            return _context.abrupt(\"return\", []);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function mapData(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { mapData };","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/utils/mapData.js"],"names":["dayjs","getIcon","formatDate","dte","lang","locale","replace","isValid","unix","format","mapCurrent","day","date","dt","description","weather","icon","temperature","current","temp","toFixed","min","undefined","max","wind","wind_speed","humidity","pressure","mapForecast","forecast","mappedForecast","i","push","mapData","data","todayData","forecastData","console","log","mapped","daysData"],"mappings":"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","sourcesContent":["import dayjs from \"dayjs\";\nimport { getIcon } from \"./iconsMap\";\n\nconst formatDate = (dte, lang) => {\n  if (lang && lang !== \"en\") {\n    dayjs.locale(lang.replace(\"_\", \"-\"));\n  }\n  if (dte && dayjs().isValid(dte)) {\n    return dayjs.unix(dte).format(\"ddd D MMMM\");\n  }\n  return \"\";\n};\n\nconst mapCurrent = (day, lang) => {\n  return {\n    date: formatDate(day.dt, lang),\n    description: day.weather[0] ? day.weather[0].description : null,\n    icon: day.weather[0] && getIcon(day.weather[0].icon),\n    temperature: {\n      current: day.temp.toFixed(0),\n      min: undefined, // openweather doesnt provide min/max on current weather\n      max: undefined,\n    },\n    wind: day.wind_speed.toFixed(0),\n    humidity: day.humidity,\n    pressure: day.pressure,\n  };\n};\n\nconst mapForecast = (forecast, lang) => {\n  const mappedForecast = [];\n  for (let i = 0; i < 5; i += 1) {\n    mappedForecast.push({\n      date: formatDate(forecast[i].dt, lang),\n      description: forecast[i].weather[0]\n        ? forecast[i].weather[0].description\n        : null,\n      icon: forecast[i].weather[0] && getIcon(forecast[i].weather[0].icon),\n      temperature: {\n        min: forecast[i].temp.min.toFixed(0),\n        max: forecast[i].temp.max.toFixed(0),\n      },\n      wind: forecast[i].wind_speed.toFixed(0),\n      humidity: forecast[i].humidity,\n    });\n  }\n  return mappedForecast;\n};\n\nconst mapData = async (data, lang) => {\n  if (data) {\n    const [todayData, forecastData] = data;\n    console.log(forecastData, todayData);\n    const mapped = {};\n    if (forecastData.date && todayData.date) {\n      const daysData = forecastData;\n      mapped.current = mapCurrent(todayData, lang);\n      mapped.forecast = mapForecast(daysData);\n    }\n    return mapped;\n  }\n  return [];\n};\n\nexport { mapData };\n"]},"metadata":{},"sourceType":"module"}