{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js\";\nimport React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloud, faBolt, faCloudRain, faCloudShowersHeavy, faSnowflake, faSun, faSmog } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({\n  weather\n}) => {\n  const {\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n    forecast,\n    pressure\n  } = weather;\n  const forecasts = forecast.map(item => /*#__PURE__*/_jsxDEV(ForecastHour, {\n    temp: Math.floor(item.main.temp * 1) / 1,\n    icon: item.weather[0].icon,\n    month: item.dt_txt.slice(5, 7),\n    day: item.dt_txt.slice(8, 10),\n    hour: item.dt_txt.slice(11, 13) * 1\n  }, item.dt, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this));\n  let weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faBolt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Drizzle\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudRain\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Rain\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloudShowersHeavy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Snow\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSnowflake\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Clear\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSun\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this);\n  } else if (main === \"Clouds\") {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faCloud\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 19\n    }, this);\n  } else {\n    weatherIcon = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: faSmog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 19\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Results, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n      icon: weatherIcon,\n      weather: weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MediumLabel, {\n        weight: \"400\",\n        children: \"Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Forecast, {\n        children: forecasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    pressure: PropTypes.number,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js"],"names":["React","PropTypes","FontAwesomeIcon","faCloud","faBolt","faCloudRain","faCloudShowersHeavy","faSnowflake","faSun","faSmog","styled","device","ForecastHour","ResultFadeIn","MediumLabel","CurrentWeather","Results","div","ForecastWrapper","Forecast","laptop","Result","weather","city","country","date","description","main","temp","sunset","sunrise","humidity","wind","highestTemp","lowestTemp","forecast","pressure","forecasts","map","item","Math","floor","icon","dt_txt","slice","dt","weatherIcon","propTypes","shape","string","number","array","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Result.module.sass\";\nimport PropTypes from \"prop-types\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloud,\n  faBolt,\n  faCloudRain,\n  faCloudShowersHeavy,\n  faSnowflake,\n  faSun,\n  faSmog,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const {\n    city,\n    country,\n    date,\n    description,\n    main,\n    temp,\n    sunset,\n    sunrise,\n    humidity,\n    wind,\n    highestTemp,\n    lowestTemp,\n    forecast,\n    pressure,\n  } = weather;\n\n  const forecasts = forecast.map((item) => (\n    <ForecastHour\n      key={item.dt}\n      temp={Math.floor(item.main.temp * 1) / 1}\n      icon={item.weather[0].icon}\n      month={item.dt_txt.slice(5, 7)}\n      day={item.dt_txt.slice(8, 10)}\n      hour={item.dt_txt.slice(11, 13) * 1}\n    />\n  ));\n\n  let weatherIcon = null;\n\n  if (main === \"Thunderstorm\") {\n    weatherIcon = <FontAwesomeIcon icon={faBolt} />;\n  } else if (main === \"Drizzle\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudRain} />;\n  } else if (main === \"Rain\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloudShowersHeavy} />;\n  } else if (main === \"Snow\") {\n    weatherIcon = <FontAwesomeIcon icon={faSnowflake} />;\n  } else if (main === \"Clear\") {\n    weatherIcon = <FontAwesomeIcon icon={faSun} />;\n  } else if (main === \"Clouds\") {\n    weatherIcon = <FontAwesomeIcon icon={faCloud} />;\n  } else {\n    weatherIcon = <FontAwesomeIcon icon={faSmog} />;\n  }\n\n  return (\n    <Results>\n      <CurrentWeather icon={weatherIcon} weather={weather} />\n      <ForecastWrapper>\n        <MediumLabel weight=\"400\">Forecast</MediumLabel>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    city: PropTypes.string,\n    country: PropTypes.string,\n    date: PropTypes.string,\n    description: PropTypes.string,\n    main: PropTypes.string,\n    temp: PropTypes.number,\n    humidity: PropTypes.number,\n    wind: PropTypes.number,\n    pressure: PropTypes.number,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}