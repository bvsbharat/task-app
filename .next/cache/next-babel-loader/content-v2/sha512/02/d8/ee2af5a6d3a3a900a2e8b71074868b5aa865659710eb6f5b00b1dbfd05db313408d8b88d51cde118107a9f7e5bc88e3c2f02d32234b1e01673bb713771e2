{"ast":null,"code":"export const SET_DATA = \"SET_DATA\";\nexport const FAILURE = \"FAILURE\";\nexport const getTenants = async () => dispatch => {\n  const endpoint = \"//api.openweathermap.org/data/2.5/onecall\";\n  const {\n    data,\n    errorMessage\n  } = useSelector(state => state);\n  const [isLoading, setIsLoading] = useState(false);\n  const {\n    unit,\n    lang,\n    key,\n    lon,\n    lat\n  } = options;\n  const params = {\n    appid: key,\n    lang,\n    units: unit,\n    lat,\n    lon\n  };\n\n  const fetchData = async () => {\n    setIsLoading(true);\n\n    try {\n      const forecastResponse = await axios.get(endpoint, {\n        params\n      });\n      const payload = mapData(forecastResponse.data.daily, forecastResponse.data.current, lang);\n      dispatch({\n        type: SET_DATA,\n        payload\n      });\n    } catch (error) {\n      console.error(error.message);\n      dispatch({\n        type: FAILURE,\n        payload: {\n          error: error.message || error\n        }\n      });\n    }\n\n    setIsLoading(false);\n  };\n};","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/redux/action.js"],"names":["SET_DATA","FAILURE","getTenants","dispatch","endpoint","data","errorMessage","useSelector","state","isLoading","setIsLoading","useState","unit","lang","key","lon","lat","options","params","appid","units","fetchData","forecastResponse","axios","get","payload","mapData","daily","current","type","error","console","message"],"mappings":"AAAA,OAAO,MAAMA,QAAQ,GAAG,UAAjB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,OAAO,MAAMC,UAAU,GAAG,YAAaC,QAAD,IAAc;AAClD,QAAMC,QAAQ,GAAG,2CAAjB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAyBC,WAAW,CAAEC,KAAD,IAAWA,KAAZ,CAA1C;AAEA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BC,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA,GAAd;AAAmBC,IAAAA,GAAnB;AAAwBC,IAAAA;AAAxB,MAAgCC,OAAtC;AACA,QAAMC,MAAM,GAAG;AACbC,IAAAA,KAAK,EAAEL,GADM;AAEbD,IAAAA,IAFa;AAGbO,IAAAA,KAAK,EAAER,IAHM;AAIbI,IAAAA,GAJa;AAKbD,IAAAA;AALa,GAAf;;AAQA,QAAMM,SAAS,GAAG,YAAY;AAC5BX,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMY,gBAAgB,GAAG,MAAMC,KAAK,CAACC,GAAN,CAAUpB,QAAV,EAAoB;AAAEc,QAAAA;AAAF,OAApB,CAA/B;AACA,YAAMO,OAAO,GAAGC,OAAO,CACrBJ,gBAAgB,CAACjB,IAAjB,CAAsBsB,KADD,EAErBL,gBAAgB,CAACjB,IAAjB,CAAsBuB,OAFD,EAGrBf,IAHqB,CAAvB;AAMAV,MAAAA,QAAQ,CAAC;AACP0B,QAAAA,IAAI,EAAE7B,QADC;AAEPyB,QAAAA;AAFO,OAAD,CAAR;AAID,KAZD,CAYE,OAAOK,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAK,CAACE,OAApB;AACA7B,MAAAA,QAAQ,CAAC;AAAE0B,QAAAA,IAAI,EAAE5B,OAAR;AAAiBwB,QAAAA,OAAO,EAAE;AAAEK,UAAAA,KAAK,EAAEA,KAAK,CAACE,OAAN,IAAiBF;AAA1B;AAA1B,OAAD,CAAR;AACD;;AACDpB,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAnBD;AAoBD,CAlCM","sourcesContent":["export const SET_DATA = \"SET_DATA\";\nexport const FAILURE = \"FAILURE\";\n\nexport const getTenants = async () => (dispatch) => {\n  const endpoint = \"//api.openweathermap.org/data/2.5/onecall\";\n  const { data, errorMessage } = useSelector((state) => state);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const { unit, lang, key, lon, lat } = options;\n  const params = {\n    appid: key,\n    lang,\n    units: unit,\n    lat,\n    lon,\n  };\n\n  const fetchData = async () => {\n    setIsLoading(true);\n    try {\n      const forecastResponse = await axios.get(endpoint, { params });\n      const payload = mapData(\n        forecastResponse.data.daily,\n        forecastResponse.data.current,\n        lang\n      );\n\n      dispatch({\n        type: SET_DATA,\n        payload,\n      });\n    } catch (error) {\n      console.error(error.message);\n      dispatch({ type: FAILURE, payload: { error: error.message || error } });\n    }\n    setIsLoading(false);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}