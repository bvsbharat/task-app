{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore } from \"redux\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\nconst initialState = {\n  data: null,\n  errorMessage: null\n}; // create your reducer\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return _objectSpread(_objectSpread({}, state), action.payload);\n\n    case SUCCESS:\n      return {\n        data: payload,\n        errorMessage: null\n      };\n\n    case FAILURE:\n      return {\n        data: null,\n        errorMessage: payload\n      };\n\n    default:\n      return state;\n  }\n}; // create a makeStore function\n\n\nconst makeStore = context => createStore(reducer); // export an assembled wrapper\n\n\nexport const wrapper = createWrapper(makeStore, {\n  debug: true\n});","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/redux/store.js"],"names":["createStore","createWrapper","HYDRATE","SUCCESS","FAILURE","initialState","data","errorMessage","reducer","state","action","type","payload","makeStore","context","wrapper","debug"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,oBAAvC;AAEA,OAAO,MAAMC,OAAO,GAAG,SAAhB;AACP,OAAO,MAAMC,OAAO,GAAG,SAAhB;AAEP,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,YAAY,EAAE;AAFK,CAArB,C,CAKA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,OAAL;AACE,6CAAYO,KAAZ,GAAsBC,MAAM,CAACE,OAA7B;;AACF,SAAKT,OAAL;AACE,aAAO;AACLG,QAAAA,IAAI,EAAEM,OADD;AAELL,QAAAA,YAAY,EAAE;AAFT,OAAP;;AAIF,SAAKH,OAAL;AACE,aAAO;AAAEE,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,YAAY,EAAEK;AAA5B,OAAP;;AACF;AACE,aAAOH,KAAP;AAXJ;AAaD,CAdD,C,CAgBA;;;AACA,MAAMI,SAAS,GAAIC,OAAD,IAAad,WAAW,CAACQ,OAAD,CAA1C,C,CAEA;;;AACA,OAAO,MAAMO,OAAO,GAAGd,aAAa,CAACY,SAAD,EAAY;AAAEG,EAAAA,KAAK,EAAE;AAAT,CAAZ,CAA7B","sourcesContent":["import { createStore } from \"redux\";\nimport { createWrapper, HYDRATE } from \"next-redux-wrapper\";\n\nexport const SUCCESS = \"SUCCESS\";\nexport const FAILURE = \"FAILURE\";\n\nconst initialState = {\n  data: null,\n  errorMessage: null,\n};\n\n// create your reducer\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case HYDRATE:\n      return { ...state, ...action.payload };\n    case SUCCESS:\n      return {\n        data: payload,\n        errorMessage: null,\n      };\n    case FAILURE:\n      return { data: null, errorMessage: payload };\n    default:\n      return state;\n  }\n};\n\n// create a makeStore function\nconst makeStore = (context) => createStore(reducer);\n\n// export an assembled wrapper\nexport const wrapper = createWrapper(makeStore, { debug: true });\n"]},"metadata":{},"sourceType":"module"}