{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/Setting.js\";\nimport React, { useState } from \"react\";\nimport { toggleTemp } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faToggleOn, faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../responsive/Device\";\nconst SearchIcon = styled.span`\n  display: block;\n  position: fixed;\n  bottom: 10px;\n  right: 5px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #fff;\n  cursor: pointer;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\nexport default function Setting() {\n  const dispatch = useDispatch();\n  const [temp, toggleTemp] = useSelector(state => state.UnitType);\n  return /*#__PURE__*/_jsxDEV(SearchIcon, {\n    onClick: () => {\n      let type = \"metric\";\n\n      if (UnitType === \"metric\") {\n        type = \"imperial\";\n      }\n\n      dispatch(toggleTemp(type));\n    },\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: temp ? faToggleOn : faToggleOff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/Setting.js"],"names":["React","useState","toggleTemp","useSelector","useDispatch","FontAwesomeIcon","faToggleOn","faToggleOff","styled","device","SearchIcon","span","tablet","laptop","Setting","dispatch","temp","state","UnitType","type"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,mCAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,MAAMC,UAAU,GAAGF,MAAM,CAACG,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWF,MAAM,CAACG,MAAO;AACzB;AACA;AACA;AACA;AACA,WAAWH,MAAM,CAACI,MAAO;AACzB;AACA;AACA;AACA;AACA,CArBA;AAuBA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM,CAACY,IAAD,EAAOd,UAAP,IAAqBC,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,QAAlB,CAAtC;AACA,sBACE,QAAC,UAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIC,IAAI,GAAG,QAAX;;AACA,UAAID,QAAQ,KAAK,QAAjB,EAA2B;AACzBC,QAAAA,IAAI,GAAG,UAAP;AACD;;AACDJ,MAAAA,QAAQ,CAACb,UAAU,CAACiB,IAAD,CAAX,CAAR;AACD,KAPH;AAAA,2BASE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEH,IAAI,GAAGV,UAAH,GAAgBC;AAA3C;AAAA;AAAA;AAAA;AAAA;AATF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD","sourcesContent":["import React, { useState } from \"react\";\nimport { toggleTemp } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faToggleOn, faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../responsive/Device\";\nconst SearchIcon = styled.span`\n  display: block;\n  position: fixed;\n  bottom: 10px;\n  right: 5px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #fff;\n  cursor: pointer;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport default function Setting() {\n  const dispatch = useDispatch();\n  const [temp, toggleTemp] = useSelector((state) => state.UnitType);\n  return (\n    <SearchIcon\n      onClick={() => {\n        let type = \"metric\";\n        if (UnitType === \"metric\") {\n          type = \"imperial\";\n        }\n        dispatch(toggleTemp(type));\n      }}\n    >\n      <FontAwesomeIcon icon={temp ? faToggleOn : faToggleOff} />\n    </SearchIcon>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}