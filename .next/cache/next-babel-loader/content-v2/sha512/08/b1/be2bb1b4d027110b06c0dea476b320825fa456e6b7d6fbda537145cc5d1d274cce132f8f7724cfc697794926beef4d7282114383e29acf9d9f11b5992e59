{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/Setting.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { toggleTemp } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faToggleOn, faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../responsive/Device\";\nconst SearchIcon = styled.span`\n  display: block;\n  position: fixed;\n  bottom: 10px;\n  right: 5px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #fff;\n  cursor: pointer;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\nexport default function Setting() {\n  const dispatch = useDispatch();\n  const {\n    0: temp,\n    1: toggleTemp\n  } = useState(false);\n  return /*#__PURE__*/_jsxDEV(SearchIcon, {\n    onClick: () => {\n      if (state.UnitType === \"metric\") {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          UnitType: \"imperial\"\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        UnitType: \"metric\"\n      });\n      dispatch(toggleTemp(UnitType));\n    },\n    children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n      icon: temp ? faToggleOn : faToggleOff\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/Setting.js"],"names":["React","useState","toggleTemp","useSelector","useDispatch","FontAwesomeIcon","faToggleOn","faToggleOff","styled","device","SearchIcon","span","tablet","laptop","Setting","dispatch","temp","state","UnitType"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,mCAAxC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,MAAMC,UAAU,GAAGF,MAAM,CAACG,IAAK;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAWF,MAAM,CAACG,MAAO;AACzB;AACA;AACA;AACA;AACA,WAAWH,MAAM,CAACI,MAAO;AACzB;AACA;AACA;AACA;AACA,CArBA;AAuBA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAA,OAACY,IAAD;AAAA,OAAOd;AAAP,MAAqBD,QAAQ,CAAC,KAAD,CAAnC;AACA,sBACE,QAAC,UAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACb,UAAIgB,KAAK,CAACC,QAAN,KAAmB,QAAvB,EAAiC;AAC/B,+CACKD,KADL;AAEEC,UAAAA,QAAQ,EAAE;AAFZ;AAID;;AACD,6CACKD,KADL;AAEEC,QAAAA,QAAQ,EAAE;AAFZ;AAIAH,MAAAA,QAAQ,CAACb,UAAU,CAACgB,QAAD,CAAX,CAAR;AACD,KAbH;AAAA,2BAeE,QAAC,eAAD;AAAiB,MAAA,IAAI,EAAEF,IAAI,GAAGV,UAAH,GAAgBC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAfF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD","sourcesContent":["import React, { useState } from \"react\";\nimport { toggleTemp } from \"../../redux/action\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faToggleOn, faToggleOff } from \"@fortawesome/free-solid-svg-icons\";\nimport styled from \"styled-components\";\nimport device from \"../responsive/Device\";\nconst SearchIcon = styled.span`\n  display: block;\n  position: fixed;\n  bottom: 10px;\n  right: 5px;\n  transform: translate(-50%, -50%);\n  height: 14px;\n  width: 14px;\n  font-size: 14px;\n  color: #fff;\n  cursor: pointer;\n  @media ${device.tablet} {\n    height: 15px;\n    width: 15px;\n    font-size: 15px;\n  }\n  @media ${device.laptop} {\n    height: 16px;\n    width: 16px;\n    font-size: 16px;\n  }\n`;\n\nexport default function Setting() {\n  const dispatch = useDispatch();\n  const [temp, toggleTemp] = useState(false);\n  return (\n    <SearchIcon\n      onClick={() => {\n        if (state.UnitType === \"metric\") {\n          return {\n            ...state,\n            UnitType: \"imperial\",\n          };\n        }\n        return {\n          ...state,\n          UnitType: \"metric\",\n        };\n        dispatch(toggleTemp(UnitType));\n      }}\n    >\n      <FontAwesomeIcon icon={temp ? faToggleOn : faToggleOff} />\n    </SearchIcon>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}