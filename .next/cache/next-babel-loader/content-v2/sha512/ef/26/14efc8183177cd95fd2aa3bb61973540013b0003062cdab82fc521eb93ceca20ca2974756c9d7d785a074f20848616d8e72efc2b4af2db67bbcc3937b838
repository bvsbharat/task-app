{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _taggedTemplateLiteral from \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  overflow-x: scroll;\\n  overflow-y: hidden;\\n  scrollbar-color: lightgray #ffffff;\\n  scrollbar-width: thin;\\n  margin-top: 20px;\\n  padding-bottom: 20px;\\n  @media \", \" {\\n    order: 4;\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  flex-basis: 100%;\\n  margin: 20px 0;\\n  overflow: hidden;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: space-between;\\n  padding: 40px 0;\\n  opacity: 0;\\n  visibility: hidden;\\n  position: relative;\\n  top: 20px;\\n  background: rgb(0 0 0 / 23%);\\n  margin-top: 50px;\\n  padding: 20px 40px;\\n  border-radius: 10px;\\n  box-shadow: 0 3px 6px rgb(0 0 0 / 16%), 0 3px 6px rgb(0 0 0 / 23%);\\n  animation: \", \" 0.5s 1.4s forwards;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from \"react\";\nimport \"./Result.module.sass\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\nvar Results = styled.div(_templateObject(), ResultFadeIn);\n_c = Results;\nvar ForecastWrapper = styled.div(_templateObject2());\n_c2 = ForecastWrapper;\nvar Forecast = styled.div(_templateObject3(), device.laptop);\n_c3 = Forecast;\n\nvar Result = function Result(_ref) {\n  _s();\n\n  var weather = _ref.weather;\n  var current = weather.current,\n      forecast = weather.forecast;\n  var unitType = useSelector(function (state) {\n    return state.UnitType;\n  });\n\n  var getUnitTypes = function getUnitTypes(type) {\n    if (type === \"metric\") return {\n      temperature: \"C\",\n      windSpeed: \"Km/h\"\n    };\n    return {\n      temperature: \"F\",\n      windSpeed: \"mph\"\n    };\n  };\n\n  var forecasts = forecast.map(function (_ref2) {\n    var date = _ref2.date,\n        description = _ref2.description,\n        icon = _ref2.icon,\n        temperature = _ref2.temperature;\n    return /*#__PURE__*/_jsxDEV(ForecastHour, {\n      date: date,\n      description: description,\n      icon: icon,\n      temperature: temperature,\n      unitsLabels: getUnitTypes(unitType)\n    }, date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(Results, {\n    children: [/*#__PURE__*/_jsxDEV(CurrentWeather, {\n      weather: current,\n      unitsLabels: getUnitTypes(unitType)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(ForecastWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(MediumLabel, {\n        weight: \"400\",\n        children: \" Next 7 Day's Forecast\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Forecast, {\n        children: forecasts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Result, \"ym9TXWULzYPwTWuIKGmhUgpQubQ=\", false, function () {\n  return [useSelector];\n});\n\n_c4 = Result;\nResult.propTypes = {\n  weather: PropTypes.shape({\n    current: PropTypes.object,\n    forecast: PropTypes.array\n  }).isRequired\n};\nexport default Result;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Results\");\n$RefreshReg$(_c2, \"ForecastWrapper\");\n$RefreshReg$(_c3, \"Forecast\");\n$RefreshReg$(_c4, \"Result\");","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/Result.js"],"names":["React","useSelector","PropTypes","styled","device","ForecastHour","ResultFadeIn","MediumLabel","CurrentWeather","Results","div","ForecastWrapper","Forecast","laptop","Result","weather","current","forecast","unitType","state","UnitType","getUnitTypes","type","temperature","windSpeed","forecasts","map","date","description","icon","propTypes","shape","object","array","isRequired"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AAEA,IAAMC,OAAO,GAAGN,MAAM,CAACO,GAAV,oBAcEJ,YAdF,CAAb;KAAMG,O;AAiBN,IAAME,eAAe,GAAGR,MAAM,CAACO,GAAV,oBAArB;MAAMC,e;AAMN,IAAMC,QAAQ,GAAGT,MAAM,CAACO,GAAV,qBASHN,MAAM,CAACS,MATJ,CAAd;MAAMD,Q;;AAcN,IAAME,MAAM,GAAG,SAATA,MAAS,OAAiB;AAAA;;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAAA,MACtBC,OADsB,GACAD,OADA,CACtBC,OADsB;AAAA,MACbC,QADa,GACAF,OADA,CACbE,QADa;AAE9B,MAAMC,QAAQ,GAAGjB,WAAW,CAAC,UAACkB,KAAD;AAAA,WAAWA,KAAK,CAACC,QAAjB;AAAA,GAAD,CAA5B;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAU;AAC7B,QAAIA,IAAI,KAAK,QAAb,EAAuB,OAAO;AAAEC,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAP;AACvB,WAAO;AAAED,MAAAA,WAAW,EAAE,GAAf;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAP;AACD,GAHD;;AAKA,MAAMC,SAAS,GAAGR,QAAQ,CAACS,GAAT,CAAa;AAAA,QAAGC,IAAH,SAAGA,IAAH;AAAA,QAASC,WAAT,SAASA,WAAT;AAAA,QAAsBC,IAAtB,SAAsBA,IAAtB;AAAA,QAA4BN,WAA5B,SAA4BA,WAA5B;AAAA,wBAC7B,QAAC,YAAD;AAEE,MAAA,IAAI,EAAEI,IAFR;AAGE,MAAA,WAAW,EAAEC,WAHf;AAIE,MAAA,IAAI,EAAEC,IAJR;AAKE,MAAA,WAAW,EAAEN,WALf;AAME,MAAA,WAAW,EAAEF,YAAY,CAACH,QAAD;AAN3B,OACOS,IADP;AAAA;AAAA;AAAA;AAAA,aAD6B;AAAA,GAAb,CAAlB;AAWA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEX,OAAzB;AAAkC,MAAA,WAAW,EAAEK,YAAY,CAACH,QAAD;AAA3D;AAAA;AAAA;AAAA;AAAA,aADF,eAEE,QAAC,eAAD;AAAA,8BACE,QAAC,WAAD;AAAa,QAAA,MAAM,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAEE,QAAC,QAAD;AAAA,kBAAWO;AAAX;AAAA;AAAA;AAAA;AAAA,eAFF;AAAA;AAAA;AAAA;AAAA;AAAA,aAFF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CA7BD;;GAAMX,M;UAEab,W;;;MAFba,M;AA+BNA,MAAM,CAACgB,SAAP,GAAmB;AACjBf,EAAAA,OAAO,EAAEb,SAAS,CAAC6B,KAAV,CAAgB;AACvBf,IAAAA,OAAO,EAAEd,SAAS,CAAC8B,MADI;AAEvBf,IAAAA,QAAQ,EAAEf,SAAS,CAAC+B;AAFG,GAAhB,EAGNC;AAJc,CAAnB;AAOA,eAAepB,MAAf","sourcesContent":["import React from \"react\";\nimport \"./Result.module.sass\";\nimport { useSelector } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport device from \"../../responsive/Device\";\nimport ForecastHour from \"./ForecastHour\";\nimport ResultFadeIn from \"./ResultFadeIn\";\nimport MediumLabel from \"./MediumLabel\";\nimport CurrentWeather from \"./CurrentWeather\";\n\nconst Results = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  padding: 40px 0;\n  opacity: 0;\n  visibility: hidden;\n  position: relative;\n  top: 20px;\n  background: rgb(0 0 0 / 23%);\n  margin-top: 50px;\n  padding: 20px 40px;\n  border-radius: 10px;\n  box-shadow: 0 3px 6px rgb(0 0 0 / 16%), 0 3px 6px rgb(0 0 0 / 23%);\n  animation: ${ResultFadeIn} 0.5s 1.4s forwards;\n`;\n\nconst ForecastWrapper = styled.div`\n  flex-basis: 100%;\n  margin: 20px 0;\n  overflow: hidden;\n`;\n\nconst Forecast = styled.div`\n  position: relative;\n  display: flex;\n  overflow-x: scroll;\n  overflow-y: hidden;\n  scrollbar-color: lightgray #ffffff;\n  scrollbar-width: thin;\n  margin-top: 20px;\n  padding-bottom: 20px;\n  @media ${device.laptop} {\n    order: 4;\n  }\n`;\n\nconst Result = ({ weather }) => {\n  const { current, forecast } = weather;\n  const unitType = useSelector((state) => state.UnitType);\n\n  const getUnitTypes = (type) => {\n    if (type === \"metric\") return { temperature: \"C\", windSpeed: \"Km/h\" };\n    return { temperature: \"F\", windSpeed: \"mph\" };\n  };\n\n  const forecasts = forecast.map(({ date, description, icon, temperature }) => (\n    <ForecastHour\n      key={date}\n      date={date}\n      description={description}\n      icon={icon}\n      temperature={temperature}\n      unitsLabels={getUnitTypes(unitType)}\n    />\n  ));\n\n  return (\n    <Results>\n      <CurrentWeather weather={current} unitsLabels={getUnitTypes(unitType)} />\n      <ForecastWrapper>\n        <MediumLabel weight=\"400\"> Next 7 Day's Forecast</MediumLabel>\n        <Forecast>{forecasts}</Forecast>\n      </ForecastWrapper>\n    </Results>\n  );\n};\n\nResult.propTypes = {\n  weather: PropTypes.shape({\n    current: PropTypes.object,\n    forecast: PropTypes.array,\n  }).isRequired,\n};\n\nexport default Result;\n"]},"metadata":{},"sourceType":"module"}