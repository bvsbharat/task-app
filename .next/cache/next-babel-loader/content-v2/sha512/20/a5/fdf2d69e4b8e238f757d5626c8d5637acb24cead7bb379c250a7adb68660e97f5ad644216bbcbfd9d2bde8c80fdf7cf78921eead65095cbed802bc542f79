{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/App.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({\n  showLabel\n}) => showLabel ? 1 : 0};\n\n  ${({\n  secondary\n}) => secondary && `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({\n  showResult\n}) => showResult && `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      value: \"\",\n      weatherInfo: null,\n      error: false\n    });\n\n    _defineProperty(this, \"handleInputChange\", e => {\n      this.setState({\n        value: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleSearchCity\", e => {\n      e.preventDefault();\n      const {\n        value\n      } = this.state;\n      const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n      const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n      const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n      Promise.all([fetch(weather), fetch(forecast)]).then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n\n        throw Error(res1.statusText, res2.statusText);\n      }).then(([data1, data2]) => {\n        const months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"Nocvember\", \"December\"];\n        const days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n        const sunset = new Date(data1.sys.sunset * 1000).toLocaleTimeString().slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000).toLocaleTimeString().slice(0, 5);\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list\n        };\n        this.setState({\n          weatherInfo,\n          error: false\n        });\n      }).catch(error => {\n        console.log(error);\n        this.setState({\n          error: true,\n          weatherInfo: null\n        });\n      });\n    });\n  }\n\n  render() {\n    const {\n      value,\n      weatherInfo,\n      error\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(WeatherWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(AppTitle, {\n          secondary: true,\n          showResult: (weatherInfo || error) && true,\n          children: \"Weather app\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchCity, {\n          value: value,\n          showResult: (weatherInfo || error) && true,\n          change: this.handleInputChange,\n          submit: this.handleSearchCity\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), weatherInfo && /*#__PURE__*/_jsxDEV(Result, {\n          weather: weatherInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 27\n        }, this), error && /*#__PURE__*/_jsxDEV(NotFound, {\n          error: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bbhavnasi/Desktop/ReactJS-Apps/App1/nextjs-blog/src/components/WeatherInt/App.js"],"names":["React","styled","SearchCity","device","Result","NotFound","AppTitle","h1","showLabel","secondary","tablet","laptop","laptopL","desktop","showResult","WeatherWrapper","div","App","Component","value","weatherInfo","error","e","setState","target","preventDefault","state","APIkey","weather","forecast","Promise","all","fetch","then","res1","res2","ok","json","Error","statusText","data1","data2","months","days","currentDate","Date","date","getDay","getDate","getMonth","sunset","sys","toLocaleTimeString","slice","sunrise","city","name","country","description","main","temp","highestTemp","temp_max","lowestTemp","temp_min","clouds","humidity","wind","speed","list","catch","console","log","render","handleInputChange","handleSearchCity"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport SearchCity from \"./SearchCity\";\nimport device from \"../../responsive/Device\";\nimport Result from \"./Result\";\nimport NotFound from \"./NotFound\";\n\nconst AppTitle = styled.h1`\n  display: block;\n  height: 64px;\n  margin: 0;\n  padding: 20px 0;\n  font-size: 20px;\n  text-transform: uppercase;\n  font-weight: 400;\n  color: #ffffff;\n  transition: 0.3s 1.4s;\n  opacity: ${({ showLabel }) => (showLabel ? 1 : 0)};\n\n  ${({ secondary }) =>\n    secondary &&\n    `\n    opacity: 1;\n    height: auto;\n    position: relative;\n    padding: 20px 0;\n    font-size: 30px;\n    top: 20%;\n    text-align: center;\n    transition: .5s;\n    @media ${device.tablet} {\n      font-size: 40px;\n    }\n    @media ${device.laptop} {\n      font-size: 50px;\n    }\n    @media ${device.laptopL} {\n      font-size: 60px;\n    }\n    @media ${device.desktop} {\n      font-size: 70px;\n    }\n    \n  `}\n\n  ${({ showResult }) =>\n    showResult &&\n    `\n    opacity: 0;\n    visibility: hidden;\n    top: 10%;\n  `}\n`;\n\nconst WeatherWrapper = styled.div`\n  max-width: 1500px;\n  margin: 0 auto;\n  height: calc(100vh - 64px);\n  width: 100%;\n  position: relative;\n`;\n\nclass App extends React.Component {\n  state = {\n    value: \"\",\n    weatherInfo: null,\n    error: false,\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value,\n    });\n  };\n\n  handleSearchCity = (e) => {\n    e.preventDefault();\n    const { value } = this.state;\n    const APIkey = \"82bc0d2d2aa2db497547b0da40fb0dcf\"; //process.env.REACT_APP_API_KEY;\n\n    const weather = `https://api.openweathermap.org/data/2.5/weather?q=${value}&APPID=${APIkey}&units=metric`;\n    const forecast = `https://api.openweathermap.org/data/2.5/forecast?q=${value}&APPID=${APIkey}&units=metric`;\n\n    Promise.all([fetch(weather), fetch(forecast)])\n      .then(([res1, res2]) => {\n        if (res1.ok && res2.ok) {\n          return Promise.all([res1.json(), res2.json()]);\n        }\n        throw Error(res1.statusText, res2.statusText);\n      })\n      .then(([data1, data2]) => {\n        const months = [\n          \"January\",\n          \"February\",\n          \"March\",\n          \"April\",\n          \"May\",\n          \"June\",\n          \"July\",\n          \"August\",\n          \"September\",\n          \"October\",\n          \"Nocvember\",\n          \"December\",\n        ];\n        const days = [\n          \"Sunday\",\n          \"Monday\",\n          \"Tuesday\",\n          \"Wednesday\",\n          \"Thursday\",\n          \"Friday\",\n          \"Saturday\",\n        ];\n        const currentDate = new Date();\n        const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n          months[currentDate.getMonth()]\n        }`;\n        const sunset = new Date(data1.sys.sunset * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n        const sunrise = new Date(data1.sys.sunrise * 1000)\n          .toLocaleTimeString()\n          .slice(0, 5);\n\n        const weatherInfo = {\n          city: data1.name,\n          country: data1.sys.country,\n          date,\n          description: data1.weather[0].description,\n          main: data1.weather[0].main,\n          temp: data1.main.temp,\n          highestTemp: data1.main.temp_max,\n          lowestTemp: data1.main.temp_min,\n          sunrise,\n          sunset,\n          clouds: data1.clouds.all,\n          humidity: data1.main.humidity,\n          wind: data1.wind.speed,\n          forecast: data2.list,\n        };\n        this.setState({\n          weatherInfo,\n          error: false,\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n\n        this.setState({\n          error: true,\n          weatherInfo: null,\n        });\n      });\n  };\n\n  render() {\n    const { value, weatherInfo, error } = this.state;\n    return (\n      <>\n        {/* <AppTitle showLabel={(weatherInfo || error) && true}>\n          Weather app\n        </AppTitle> */}\n        <WeatherWrapper>\n          <AppTitle secondary showResult={(weatherInfo || error) && true}>\n            Weather app\n          </AppTitle>\n          <SearchCity\n            value={value}\n            showResult={(weatherInfo || error) && true}\n            change={this.handleInputChange}\n            submit={this.handleSearchCity}\n          />\n          {weatherInfo && <Result weather={weatherInfo} />}\n          {error && <NotFound error={error} />}\n        </WeatherWrapper>\n      </>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}